using System;
using System.Collections.Generic;
using System.Text;

namespace OpenGL
{
    public enum StringName
    {
        Extensions = Gl.EXTENSIONS,
        Renderer = Gl.RENDERER,
        Vendor = Gl.VENDOR,
        Version = Gl.VERSION,
        ShadingLanguageVersion = Gl.SHADING_LANGUAGE_VERSION,
    }

    public enum ClearBufferMask : uint
    {
        AccumBufferBit = Gl.ACCUM_BUFFER_BIT,
        ColorBufferBit = Gl.COLOR_BUFFER_BIT,
        DepthBufferBit = Gl.DEPTH_BUFFER_BIT,
        StencilBufferBit = Gl.STENCIL_BUFFER_BIT,
    }

    public enum ReadBufferMode
    {
        ColorAttachment0 = Gl.COLOR_ATTACHMENT0,
        ColorAttachment1 = Gl.COLOR_ATTACHMENT1,
        ColorAttachment2 = Gl.COLOR_ATTACHMENT2,
        ColorAttachment3 = Gl.COLOR_ATTACHMENT3,
        ColorAttachment4 = Gl.COLOR_ATTACHMENT4,
        ColorAttachment5 = Gl.COLOR_ATTACHMENT5,
        ColorAttachment6 = Gl.COLOR_ATTACHMENT6,
        ColorAttachment7 = Gl.COLOR_ATTACHMENT7,
        ColorAttachment8 = Gl.COLOR_ATTACHMENT8,
        ColorAttachment9 = Gl.COLOR_ATTACHMENT9,
        ColorAttachment10 = Gl.COLOR_ATTACHMENT10,
        ColorAttachment11 = Gl.COLOR_ATTACHMENT11,
        ColorAttachment12 = Gl.COLOR_ATTACHMENT12,
        ColorAttachment13 = Gl.COLOR_ATTACHMENT13,
        ColorAttachment14 = Gl.COLOR_ATTACHMENT14,
        ColorAttachment15 = Gl.COLOR_ATTACHMENT15,
    }

    public enum BlitFramebufferFilter
    {
        Nearest = Gl.NEAREST,
        Linear = Gl.LINEAR,
    }

    public enum StencilOp : int
    {
        Keep = Gl.KEEP,
        Replace = Gl.REPLACE,
    }

    public enum StencilFunction
    {
        Notequal = Gl.NOTEQUAL,
        Always = Gl.ALWAYS,
    }

    public enum ErrorCode
    {
        NoError = Gl.NO_ERROR,
    }

    public enum EnableCap
    {
        AlphaTest = Gl.ALPHA_TEST,
        AutoNormal = Gl.AUTO_NORMAL,
        Blend = Gl.BLEND,
        ClipPlane0 = Gl.CLIP_PLANE0,
        ClipDistance0 = Gl.CLIP_DISTANCE0,
        ClipPlane1 = Gl.CLIP_PLANE1,
        ClipDistance1 = Gl.CLIP_DISTANCE1,
        ClipPlane2 = Gl.CLIP_PLANE2,
        ClipDistance2 = Gl.CLIP_DISTANCE2,
        ClipPlane3 = Gl.CLIP_PLANE3,
        ClipDistance3 = Gl.CLIP_DISTANCE3,
        ClipPlane4 = Gl.CLIP_PLANE4,
        ClipDistance4 = Gl.CLIP_DISTANCE4,
        ClipPlane5 = Gl.CLIP_PLANE5,
        ClipDistance5 = Gl.CLIP_DISTANCE5,
        ClipDistance6 = Gl.CLIP_DISTANCE6,
        ClipDistance7 = Gl.CLIP_DISTANCE7,
        ColorArray = Gl.COLOR_ARRAY,
        ColorLogicOp = Gl.COLOR_LOGIC_OP,
        ColorMaterial = Gl.COLOR_MATERIAL,
        ColorTable = Gl.COLOR_TABLE,
        Convolution1d = Gl.CONVOLUTION_1D,
        Convolution2d = Gl.CONVOLUTION_2D,
        CullFace = Gl.CULL_FACE,
        DepthTest = Gl.DEPTH_TEST,
        Dither = Gl.DITHER,
        EdgeFlagArray = Gl.EDGE_FLAG_ARRAY,
        Fog = Gl.FOG,
        Histogram = Gl.HISTOGRAM,
        IndexArray = Gl.INDEX_ARRAY,
        IndexLogicOp = Gl.INDEX_LOGIC_OP,
        Light0 = Gl.LIGHT0,
        Light1 = Gl.LIGHT1,
        Light2 = Gl.LIGHT2,
        Light3 = Gl.LIGHT3,
        Light4 = Gl.LIGHT4,
        Light5 = Gl.LIGHT5,
        Light6 = Gl.LIGHT6,
        Light7 = Gl.LIGHT7,
        Lighting = Gl.LIGHTING,
        LineSmooth = Gl.LINE_SMOOTH,
        LineStipple = Gl.LINE_STIPPLE,
        Map1Color4 = Gl.MAP1_COLOR_4,
        Map1Index = Gl.MAP1_INDEX,
        Map1Normal = Gl.MAP1_NORMAL,
        Map1TextureCoord1 = Gl.MAP1_TEXTURE_COORD_1,
        Map1TextureCoord2 = Gl.MAP1_TEXTURE_COORD_2,
        Map1TextureCoord3 = Gl.MAP1_TEXTURE_COORD_3,
        Map1TextureCoord4 = Gl.MAP1_TEXTURE_COORD_4,
        Map1Vertex3 = Gl.MAP1_VERTEX_3,
        Map1Vertex4 = Gl.MAP1_VERTEX_4,
        Map2Color4 = Gl.MAP2_COLOR_4,
        Map2Index = Gl.MAP2_INDEX,
        Map2Normal = Gl.MAP2_NORMAL,
        Map2TextureCoord1 = Gl.MAP2_TEXTURE_COORD_1,
        Map2TextureCoord2 = Gl.MAP2_TEXTURE_COORD_2,
        Map2TextureCoord3 = Gl.MAP2_TEXTURE_COORD_3,
        Map2TextureCoord4 = Gl.MAP2_TEXTURE_COORD_4,
        Map2Vertex3 = Gl.MAP2_VERTEX_3,
        Map2Vertex4 = Gl.MAP2_VERTEX_4,
        Minmax = Gl.MINMAX,
        Multisample = Gl.MULTISAMPLE,
        Normalize = Gl.NORMALIZE,
        NormalArray = Gl.NORMAL_ARRAY,
        PointSmooth = Gl.POINT_SMOOTH,
        PolygonOffsetFill = Gl.POLYGON_OFFSET_FILL,
        PolygonOffsetLine = Gl.POLYGON_OFFSET_LINE,
        PolygonOffsetPoint = Gl.POLYGON_OFFSET_POINT,
        PolygonSmooth = Gl.POLYGON_SMOOTH,
        PolygonStipple = Gl.POLYGON_STIPPLE,
        PostColorMatrixColorTable = Gl.POST_COLOR_MATRIX_COLOR_TABLE,
        PostConvolutionColorTable = Gl.POST_CONVOLUTION_COLOR_TABLE,
        RescaleNormal = Gl.RESCALE_NORMAL,
        SampleAlphaToOne = Gl.SAMPLE_ALPHA_TO_ONE,
        ScissorTest = Gl.SCISSOR_TEST,
        Separable2d = Gl.SEPARABLE_2D,
        StencilTest = Gl.STENCIL_TEST,
        Texture1d = Gl.TEXTURE_1D,
        Texture2d = Gl.TEXTURE_2D,
        Texture3d = Gl.TEXTURE_3D,
        TextureCoordArray = Gl.TEXTURE_COORD_ARRAY,
        TextureGenQ = Gl.TEXTURE_GEN_Q,
        TextureGenR = Gl.TEXTURE_GEN_R,
        TextureGenS = Gl.TEXTURE_GEN_S,
        TextureGenT = Gl.TEXTURE_GEN_T,
        VertexArray = Gl.VERTEX_ARRAY,
        FramebufferSrgb = Gl.FRAMEBUFFER_SRGB,
        PrimitiveRestart = Gl.PRIMITIVE_RESTART,
        PrimitiveRestartFixedIndex = Gl.PRIMITIVE_RESTART_FIXED_INDEX,
        RasterizerDiscard = Gl.RASTERIZER_DISCARD,
    }

    public enum VertexAttribType
    {
        Byte = Gl.BYTE,
        Short = Gl.SHORT,
        Int = Gl.INT,
        Fixed = Gl.FIXED,
        Float = Gl.FLOAT,
        HalfFloat = Gl.HALF_FLOAT,
        Double = Gl.DOUBLE,
        UnsignedByte = Gl.UNSIGNED_BYTE,
        UnsignedShort = Gl.UNSIGNED_SHORT,
        UnsignedInt = Gl.UNSIGNED_INT,
        Int2101010Rev = Gl.INT_2_10_10_10_REV,
        UnsignedInt2101010Rev = Gl.UNSIGNED_INT_2_10_10_10_REV,
        UnsignedInt10f11f11fRev = Gl.UNSIGNED_INT_10F_11F_11F_REV,
	}

    public enum PixelFormat
    {
        AbgrExt = Gl.ABGR_EXT,
        Alpha = Gl.ALPHA,
        Blue = Gl.BLUE,
        CmykaExt = Gl.CMYKA_EXT,
        CmykExt = Gl.CMYK_EXT,
        ColorIndex = Gl.COLOR_INDEX,
        DepthComponent = Gl.DEPTH_COMPONENT,
        Green = Gl.GREEN,
        Luminance = Gl.LUMINANCE,
        LuminanceAlpha = Gl.LUMINANCE_ALPHA,
        Red = Gl.RED,
        Rgb = Gl.RGB,
        Rgba = Gl.RGBA,
        StencilIndex = Gl.STENCIL_INDEX,
        UnsignedInt = Gl.UNSIGNED_INT,
        UnsignedShort = Gl.UNSIGNED_SHORT,
        Bgr = Gl.BGR,
        Bgra = Gl.BGRA,
        Rg = Gl.RG,
        DepthStencil = Gl.DEPTH_STENCIL,
        RedInteger = Gl.RED_INTEGER,
        RgInteger = Gl.RG_INTEGER,
        RgbInteger = Gl.RGB_INTEGER,
        RgbaInteger = Gl.RGBA_INTEGER,
    }

    public enum BlendingFactor
    {
        Zero = Gl.ZERO,
        One = Gl.ONE,
        SrcColor = Gl.SRC_COLOR,
        OneMinusSrcColor = Gl.ONE_MINUS_SRC_COLOR,
        DstColor = Gl.DST_COLOR,
        OneMinusDstColor = Gl.ONE_MINUS_DST_COLOR,
        SrcAlpha = Gl.SRC_ALPHA,
        OneMinusSrcAlpha = Gl.ONE_MINUS_SRC_ALPHA,
        DstAlpha = Gl.DST_ALPHA,
        OneMinusDstAlpha = Gl.ONE_MINUS_DST_ALPHA,
        ConstantColor = Gl.CONSTANT_COLOR,
        OneMinusConstantColor = Gl.ONE_MINUS_CONSTANT_COLOR,
        ConstantAlpha = Gl.CONSTANT_ALPHA,
        OneMinusConstantAlpha = Gl.ONE_MINUS_CONSTANT_ALPHA,
        SrcAlphaSaturate = Gl.SRC_ALPHA_SATURATE,
        Src1Color = Gl.SRC1_COLOR,
        Source1Alpha = Gl.SOURCE1_ALPHA,
    }

    public enum DepthFunction
    {
        Always = Gl.ALWAYS,
        Equal = Gl.EQUAL,
        Gequal = Gl.GEQUAL,
        Greater = Gl.GREATER,
        Lequal = Gl.LEQUAL,
        Less = Gl.LESS,
        Never = Gl.NEVER,
        Notequal = Gl.NOTEQUAL,
    }

    public enum MaterialFace
    {
        Back = Gl.BACK,
        Front = Gl.FRONT,
        FrontAndBack = Gl.FRONT_AND_BACK,
    }

    public enum PolygonMode
    {
        Fill = Gl.FILL,
        Line = Gl.LINE,
        Point = Gl.POINT,
    }

    public enum CullFaceMode
    {
        Back = Gl.BACK,
        Front = Gl.FRONT,
        FrontAndBack = Gl.FRONT_AND_BACK,
    }

    public enum FrontFaceDirection
    {
        Ccw = Gl.CCW,
        Cw = Gl.CW,
    }

    public enum GetPName
    {
        AccumAlphaBits = Gl.ACCUM_ALPHA_BITS,
        AccumBlueBits = Gl.ACCUM_BLUE_BITS,
        AccumClearValue = Gl.ACCUM_CLEAR_VALUE,
        AccumGreenBits = Gl.ACCUM_GREEN_BITS,
        AccumRedBits = Gl.ACCUM_RED_BITS,
        ActiveTexture = Gl.ACTIVE_TEXTURE,
        AliasedLineWidthRange = Gl.ALIASED_LINE_WIDTH_RANGE,
        AliasedPointSizeRange = Gl.ALIASED_POINT_SIZE_RANGE,
        AlphaBias = Gl.ALPHA_BIAS,
        AlphaBits = Gl.ALPHA_BITS,
        AlphaScale = Gl.ALPHA_SCALE,
        AlphaTest = Gl.ALPHA_TEST,
        AlphaTestFunc = Gl.ALPHA_TEST_FUNC,
        AlphaTestRef = Gl.ALPHA_TEST_REF,
        AttribStackDepth = Gl.ATTRIB_STACK_DEPTH,
        AutoNormal = Gl.AUTO_NORMAL,
        AuxBuffers = Gl.AUX_BUFFERS,
        Blend = Gl.BLEND,
        BlendColor = Gl.BLEND_COLOR,
        BlendDst = Gl.BLEND_DST,
        BlendEquation = Gl.BLEND_EQUATION,
        BlendSrc = Gl.BLEND_SRC,
        BlueBias = Gl.BLUE_BIAS,
        BlueBits = Gl.BLUE_BITS,
        BlueScale = Gl.BLUE_SCALE,
        ClientAttribStackDepth = Gl.CLIENT_ATTRIB_STACK_DEPTH,
        ClipPlane0 = Gl.CLIP_PLANE0,
        ClipPlane1 = Gl.CLIP_PLANE1,
        ClipPlane2 = Gl.CLIP_PLANE2,
        ClipPlane3 = Gl.CLIP_PLANE3,
        ClipPlane4 = Gl.CLIP_PLANE4,
        ClipPlane5 = Gl.CLIP_PLANE5,
        ColorArray = Gl.COLOR_ARRAY,
        ColorArraySize = Gl.COLOR_ARRAY_SIZE,
        ColorArrayStride = Gl.COLOR_ARRAY_STRIDE,
        ColorArrayType = Gl.COLOR_ARRAY_TYPE,
        ColorClearValue = Gl.COLOR_CLEAR_VALUE,
        ColorLogicOp = Gl.COLOR_LOGIC_OP,
        ColorMaterial = Gl.COLOR_MATERIAL,
        ColorMaterialFace = Gl.COLOR_MATERIAL_FACE,
        ColorMaterialParameter = Gl.COLOR_MATERIAL_PARAMETER,
        ColorMatrix = Gl.COLOR_MATRIX,
        ColorMatrixStackDepth = Gl.COLOR_MATRIX_STACK_DEPTH,
        ColorTable = Gl.COLOR_TABLE,
        ColorWritemask = Gl.COLOR_WRITEMASK,
        Convolution1d = Gl.CONVOLUTION_1D,
        Convolution2d = Gl.CONVOLUTION_2D,
        CullFace = Gl.CULL_FACE,
        CullFaceMode = Gl.CULL_FACE_MODE,
        CurrentColor = Gl.CURRENT_COLOR,
        CurrentIndex = Gl.CURRENT_INDEX,
        CurrentNormal = Gl.CURRENT_NORMAL,
        CurrentRasterColor = Gl.CURRENT_RASTER_COLOR,
        CurrentRasterDistance = Gl.CURRENT_RASTER_DISTANCE,
        CurrentRasterIndex = Gl.CURRENT_RASTER_INDEX,
        CurrentRasterPosition = Gl.CURRENT_RASTER_POSITION,
        CurrentRasterPositionValid = Gl.CURRENT_RASTER_POSITION_VALID,
        CurrentRasterTextureCoords = Gl.CURRENT_RASTER_TEXTURE_COORDS,
        CurrentTextureCoords = Gl.CURRENT_TEXTURE_COORDS,
        DepthBias = Gl.DEPTH_BIAS,
        DepthBits = Gl.DEPTH_BITS,
        DepthClearValue = Gl.DEPTH_CLEAR_VALUE,
        DepthFunc = Gl.DEPTH_FUNC,
        DepthRange = Gl.DEPTH_RANGE,
        DepthScale = Gl.DEPTH_SCALE,
        DepthTest = Gl.DEPTH_TEST,
        DepthWritemask = Gl.DEPTH_WRITEMASK,
        Dither = Gl.DITHER,
        Doublebuffer = Gl.DOUBLEBUFFER,
        DrawBuffer = Gl.DRAW_BUFFER,
        EdgeFlag = Gl.EDGE_FLAG,
        EdgeFlagArray = Gl.EDGE_FLAG_ARRAY,
        EdgeFlagArrayStride = Gl.EDGE_FLAG_ARRAY_STRIDE,
        FeedbackBufferSize = Gl.FEEDBACK_BUFFER_SIZE,
        FeedbackBufferType = Gl.FEEDBACK_BUFFER_TYPE,
        Fog = Gl.FOG,
        FogColor = Gl.FOG_COLOR,
        FogDensity = Gl.FOG_DENSITY,
        FogEnd = Gl.FOG_END,
        FogHint = Gl.FOG_HINT,
        FogIndex = Gl.FOG_INDEX,
        FogMode = Gl.FOG_MODE,
        FogStart = Gl.FOG_START,
        FrontFace = Gl.FRONT_FACE,
        GenerateMipmapHint = Gl.GENERATE_MIPMAP_HINT,
        GreenBias = Gl.GREEN_BIAS,
        GreenBits = Gl.GREEN_BITS,
        GreenScale = Gl.GREEN_SCALE,
        Histogram = Gl.HISTOGRAM,
        IndexArray = Gl.INDEX_ARRAY,
        IndexArrayStride = Gl.INDEX_ARRAY_STRIDE,
        IndexArrayType = Gl.INDEX_ARRAY_TYPE,
        IndexBits = Gl.INDEX_BITS,
        IndexClearValue = Gl.INDEX_CLEAR_VALUE,
        IndexLogicOp = Gl.INDEX_LOGIC_OP,
        LogicOp = Gl.LOGIC_OP,
        IndexMode = Gl.INDEX_MODE,
        IndexOffset = Gl.INDEX_OFFSET,
        IndexShift = Gl.INDEX_SHIFT,
        IndexWritemask = Gl.INDEX_WRITEMASK,
        Light0 = Gl.LIGHT0,
        Light1 = Gl.LIGHT1,
        Light2 = Gl.LIGHT2,
        Light3 = Gl.LIGHT3,
        Light4 = Gl.LIGHT4,
        Light5 = Gl.LIGHT5,
        Light6 = Gl.LIGHT6,
        Light7 = Gl.LIGHT7,
        Lighting = Gl.LIGHTING,
        LightModelAmbient = Gl.LIGHT_MODEL_AMBIENT,
        LightModelColorControl = Gl.LIGHT_MODEL_COLOR_CONTROL,
        LightModelLocalViewer = Gl.LIGHT_MODEL_LOCAL_VIEWER,
        LightModelTwoSide = Gl.LIGHT_MODEL_TWO_SIDE,
        LineSmooth = Gl.LINE_SMOOTH,
        LineSmoothHint = Gl.LINE_SMOOTH_HINT,
        LineStipple = Gl.LINE_STIPPLE,
        LineStipplePattern = Gl.LINE_STIPPLE_PATTERN,
        LineStippleRepeat = Gl.LINE_STIPPLE_REPEAT,
        LineWidth = Gl.LINE_WIDTH,
        LineWidthGranularity = Gl.LINE_WIDTH_GRANULARITY,
        LineWidthRange = Gl.LINE_WIDTH_RANGE,
        ListBase = Gl.LIST_BASE,
        ListIndex = Gl.LIST_INDEX,
        ListMode = Gl.LIST_MODE,
        LogicOpMode = Gl.LOGIC_OP_MODE,
        Map1Color4 = Gl.MAP1_COLOR_4,
        Map1GridDomain = Gl.MAP1_GRID_DOMAIN,
        Map1GridSegments = Gl.MAP1_GRID_SEGMENTS,
        Map1Index = Gl.MAP1_INDEX,
        Map1Normal = Gl.MAP1_NORMAL,
        Map1TextureCoord1 = Gl.MAP1_TEXTURE_COORD_1,
        Map1TextureCoord2 = Gl.MAP1_TEXTURE_COORD_2,
        Map1TextureCoord3 = Gl.MAP1_TEXTURE_COORD_3,
        Map1TextureCoord4 = Gl.MAP1_TEXTURE_COORD_4,
        Map1Vertex3 = Gl.MAP1_VERTEX_3,
        Map1Vertex4 = Gl.MAP1_VERTEX_4,
        Map2Color4 = Gl.MAP2_COLOR_4,
        Map2GridDomain = Gl.MAP2_GRID_DOMAIN,
        Map2GridSegments = Gl.MAP2_GRID_SEGMENTS,
        Map2Index = Gl.MAP2_INDEX,
        Map2Normal = Gl.MAP2_NORMAL,
        Map2TextureCoord1 = Gl.MAP2_TEXTURE_COORD_1,
        Map2TextureCoord2 = Gl.MAP2_TEXTURE_COORD_2,
        Map2TextureCoord3 = Gl.MAP2_TEXTURE_COORD_3,
        Map2TextureCoord4 = Gl.MAP2_TEXTURE_COORD_4,
        Map2Vertex3 = Gl.MAP2_VERTEX_3,
        Map2Vertex4 = Gl.MAP2_VERTEX_4,
        MapColor = Gl.MAP_COLOR,
        MapStencil = Gl.MAP_STENCIL,
        MatrixMode = Gl.MATRIX_MODE,
        Max3dTextureSize = Gl.MAX_3D_TEXTURE_SIZE,
        MaxAttribStackDepth = Gl.MAX_ATTRIB_STACK_DEPTH,
        MaxClientAttribStackDepth = Gl.MAX_CLIENT_ATTRIB_STACK_DEPTH,
        MaxClipDistances = Gl.MAX_CLIP_DISTANCES,
        MaxClipPlanes = Gl.MAX_CLIP_PLANES,
        MaxColorMatrixStackDepth = Gl.MAX_COLOR_MATRIX_STACK_DEPTH,
        MaxCombinedTextureImageUnits = Gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS,
        MaxCombinedUniformBlocks = Gl.MAX_COMBINED_UNIFORM_BLOCKS,
        MaxComputeSharedMemorySize = Gl.MAX_COMPUTE_SHARED_MEMORY_SIZE,
        MaxEvalOrder = Gl.MAX_EVAL_ORDER,
        MaxLights = Gl.MAX_LIGHTS,
        MaxListNesting = Gl.MAX_LIST_NESTING,
        MaxModelviewStackDepth = Gl.MAX_MODELVIEW_STACK_DEPTH,
        MaxNameStackDepth = Gl.MAX_NAME_STACK_DEPTH,
        MaxPixelMapTable = Gl.MAX_PIXEL_MAP_TABLE,
        MaxProjectionStackDepth = Gl.MAX_PROJECTION_STACK_DEPTH,
        MaxTextureSize = Gl.MAX_TEXTURE_SIZE,
        MaxTextureStackDepth = Gl.MAX_TEXTURE_STACK_DEPTH,
        MaxTextureImageUnits = Gl.MAX_TEXTURE_IMAGE_UNITS,
        MaxUniformBlockSize = Gl.MAX_UNIFORM_BLOCK_SIZE,
        MaxUniformBufferBindings = Gl.MAX_UNIFORM_BUFFER_BINDINGS,
        MaxUniformLocations = Gl.MAX_UNIFORM_LOCATIONS,
        MaxVertexUniformBlocks = Gl.MAX_VERTEX_UNIFORM_BLOCKS,
        MaxVertexUniformComponents = Gl.MAX_VERTEX_UNIFORM_COMPONENTS,
        MaxViewportDims = Gl.MAX_VIEWPORT_DIMS,
        Minmax = Gl.MINMAX,
        ModelviewMatrix = Gl.MODELVIEW_MATRIX,
        ModelviewStackDepth = Gl.MODELVIEW_STACK_DEPTH,
        Multisample = Gl.MULTISAMPLE,
        NameStackDepth = Gl.NAME_STACK_DEPTH,
        Normalize = Gl.NORMALIZE,
        NormalArray = Gl.NORMAL_ARRAY,
        NormalArrayStride = Gl.NORMAL_ARRAY_STRIDE,
        NormalArrayType = Gl.NORMAL_ARRAY_TYPE,
        PackAlignment = Gl.PACK_ALIGNMENT,
        PackImageHeight = Gl.PACK_IMAGE_HEIGHT,
        PackLsbFirst = Gl.PACK_LSB_FIRST,
        PackRowLength = Gl.PACK_ROW_LENGTH,
        PackSkipImages = Gl.PACK_SKIP_IMAGES,
        PackSkipPixels = Gl.PACK_SKIP_PIXELS,
        PackSkipRows = Gl.PACK_SKIP_ROWS,
        PackSwapBytes = Gl.PACK_SWAP_BYTES,
        PerspectiveCorrectionHint = Gl.PERSPECTIVE_CORRECTION_HINT,
        PixelMapAToASize = Gl.PIXEL_MAP_A_TO_A_SIZE,
        PixelMapBToBSize = Gl.PIXEL_MAP_B_TO_B_SIZE,
        PixelMapGToGSize = Gl.PIXEL_MAP_G_TO_G_SIZE,
        PixelMapIToASize = Gl.PIXEL_MAP_I_TO_A_SIZE,
        PixelMapIToBSize = Gl.PIXEL_MAP_I_TO_B_SIZE,
        PixelMapIToGSize = Gl.PIXEL_MAP_I_TO_G_SIZE,
        PixelMapIToISize = Gl.PIXEL_MAP_I_TO_I_SIZE,
        PixelMapIToRSize = Gl.PIXEL_MAP_I_TO_R_SIZE,
        PixelMapRToRSize = Gl.PIXEL_MAP_R_TO_R_SIZE,
        PixelMapSToSSize = Gl.PIXEL_MAP_S_TO_S_SIZE,
        PointFadeThresholdSize = Gl.POINT_FADE_THRESHOLD_SIZE,
        PointSize = Gl.POINT_SIZE,
        PointSizeGranularity = Gl.POINT_SIZE_GRANULARITY,
        PointSizeMax = Gl.POINT_SIZE_MAX,
        PointSizeMin = Gl.POINT_SIZE_MIN,
        PointSizeRange = Gl.POINT_SIZE_RANGE,
        PointSmooth = Gl.POINT_SMOOTH,
        PointSmoothHint = Gl.POINT_SMOOTH_HINT,
        PolygonMode = Gl.POLYGON_MODE,
        PolygonOffsetFactor = Gl.POLYGON_OFFSET_FACTOR,
        PolygonOffsetFill = Gl.POLYGON_OFFSET_FILL,
        PolygonOffsetLine = Gl.POLYGON_OFFSET_LINE,
        PolygonOffsetPoint = Gl.POLYGON_OFFSET_POINT,
        PolygonOffsetUnits = Gl.POLYGON_OFFSET_UNITS,
        PolygonSmooth = Gl.POLYGON_SMOOTH,
        PolygonSmoothHint = Gl.POLYGON_SMOOTH_HINT,
        PolygonStipple = Gl.POLYGON_STIPPLE,
        PostColorMatrixAlphaBias = Gl.POST_COLOR_MATRIX_ALPHA_BIAS,
        PostColorMatrixAlphaScale = Gl.POST_COLOR_MATRIX_ALPHA_SCALE,
        PostColorMatrixBlueBias = Gl.POST_COLOR_MATRIX_BLUE_BIAS,
        PostColorMatrixBlueScale = Gl.POST_COLOR_MATRIX_BLUE_SCALE,
        PostColorMatrixColorTable = Gl.POST_COLOR_MATRIX_COLOR_TABLE,
        PostColorMatrixGreenBias = Gl.POST_COLOR_MATRIX_GREEN_BIAS,
        PostColorMatrixGreenScale = Gl.POST_COLOR_MATRIX_GREEN_SCALE,
        PostColorMatrixRedBias = Gl.POST_COLOR_MATRIX_RED_BIAS,
        PostColorMatrixRedScale = Gl.POST_COLOR_MATRIX_RED_SCALE,
        PostConvolutionAlphaBias = Gl.POST_CONVOLUTION_ALPHA_BIAS,
        PostConvolutionAlphaScale = Gl.POST_CONVOLUTION_ALPHA_SCALE,
        PostConvolutionBlueBias = Gl.POST_CONVOLUTION_BLUE_BIAS,
        PostConvolutionBlueScale = Gl.POST_CONVOLUTION_BLUE_SCALE,
        PostConvolutionColorTable = Gl.POST_CONVOLUTION_COLOR_TABLE,
        PostConvolutionGreenBias = Gl.POST_CONVOLUTION_GREEN_BIAS,
        PostConvolutionGreenScale = Gl.POST_CONVOLUTION_GREEN_SCALE,
        PostConvolutionRedBias = Gl.POST_CONVOLUTION_RED_BIAS,
        PostConvolutionRedScale = Gl.POST_CONVOLUTION_RED_SCALE,
        ProjectionMatrix = Gl.PROJECTION_MATRIX,
        ProjectionStackDepth = Gl.PROJECTION_STACK_DEPTH,
        ReadBuffer = Gl.READ_BUFFER,
        RedBias = Gl.RED_BIAS,
        RedBits = Gl.RED_BITS,
        RedScale = Gl.RED_SCALE,
        RenderMode = Gl.RENDER_MODE,
        RescaleNormal = Gl.RESCALE_NORMAL,
        RgbaMode = Gl.RGBA_MODE,
        Samples = Gl.SAMPLES,
        SampleAlphaToOne = Gl.SAMPLE_ALPHA_TO_ONE,
        SampleBuffers = Gl.SAMPLE_BUFFERS,
        ScissorBox = Gl.SCISSOR_BOX,
        ScissorTest = Gl.SCISSOR_TEST,
        SelectionBufferSize = Gl.SELECTION_BUFFER_SIZE,
        Separable2d = Gl.SEPARABLE_2D,
        ShadeModel = Gl.SHADE_MODEL,
        StencilBits = Gl.STENCIL_BITS,
        StencilClearValue = Gl.STENCIL_CLEAR_VALUE,
        StencilFail = Gl.STENCIL_FAIL,
        StencilFunc = Gl.STENCIL_FUNC,
        StencilPassDepthFail = Gl.STENCIL_PASS_DEPTH_FAIL,
        StencilPassDepthPass = Gl.STENCIL_PASS_DEPTH_PASS,
        StencilRef = Gl.STENCIL_REF,
        StencilTest = Gl.STENCIL_TEST,
        StencilValueMask = Gl.STENCIL_VALUE_MASK,
        StencilWritemask = Gl.STENCIL_WRITEMASK,
        Stereo = Gl.STEREO,
        SubpixelBits = Gl.SUBPIXEL_BITS,
        Texture1d = Gl.TEXTURE_1D,
        Texture2d = Gl.TEXTURE_2D,
        TextureBinding3d = Gl.TEXTURE_BINDING_3D,
        Texture3d = Gl.TEXTURE_3D,
        TextureBinding1d = Gl.TEXTURE_BINDING_1D,
        TextureBinding2d = Gl.TEXTURE_BINDING_2D,
        TextureCoordArray = Gl.TEXTURE_COORD_ARRAY,
        TextureCoordArraySize = Gl.TEXTURE_COORD_ARRAY_SIZE,
        TextureCoordArrayStride = Gl.TEXTURE_COORD_ARRAY_STRIDE,
        TextureCoordArrayType = Gl.TEXTURE_COORD_ARRAY_TYPE,
        TextureGenQ = Gl.TEXTURE_GEN_Q,
        TextureGenR = Gl.TEXTURE_GEN_R,
        TextureGenS = Gl.TEXTURE_GEN_S,
        TextureGenT = Gl.TEXTURE_GEN_T,
        TextureMatrix = Gl.TEXTURE_MATRIX,
        TextureStackDepth = Gl.TEXTURE_STACK_DEPTH,
        UnpackAlignment = Gl.UNPACK_ALIGNMENT,
        UnpackImageHeight = Gl.UNPACK_IMAGE_HEIGHT,
        UnpackLsbFirst = Gl.UNPACK_LSB_FIRST,
        UnpackRowLength = Gl.UNPACK_ROW_LENGTH,
        UnpackSkipImages = Gl.UNPACK_SKIP_IMAGES,
        UnpackSkipPixels = Gl.UNPACK_SKIP_PIXELS,
        UnpackSkipRows = Gl.UNPACK_SKIP_ROWS,
        UnpackSwapBytes = Gl.UNPACK_SWAP_BYTES,
        VertexArray = Gl.VERTEX_ARRAY,
        VertexArraySize = Gl.VERTEX_ARRAY_SIZE,
        VertexArrayStride = Gl.VERTEX_ARRAY_STRIDE,
        VertexArrayType = Gl.VERTEX_ARRAY_TYPE,
        Viewport = Gl.VIEWPORT,
        ZoomX = Gl.ZOOM_X,
        ZoomY = Gl.ZOOM_Y,
        NumExtensions = Gl.NUM_EXTENSIONS,
        NumShadingLanguageVersions = Gl.NUM_SHADING_LANGUAGE_VERSIONS,
    }


    public enum ShaderParameterName
    {
        ShaderType = Gl.SHADER_TYPE,
        DeleteStatus = Gl.DELETE_STATUS,
        CompileStatus = Gl.COMPILE_STATUS,
        InfoLogLength = Gl.INFO_LOG_LENGTH,
        ShaderSourceLength = Gl.SHADER_SOURCE_LENGTH,
    }

    public enum ProgramProperty
    {
        DeleteStatus = Gl.DELETE_STATUS,
        LinkStatus = Gl.LINK_STATUS,
        ValidateStatus = Gl.VALIDATE_STATUS,
        InfoLogLength = Gl.INFO_LOG_LENGTH,
        AttachedShaders = Gl.ATTACHED_SHADERS,
        ActiveAtomicCounterBuffers = Gl.ACTIVE_ATOMIC_COUNTER_BUFFERS,
        ActiveAttributes = Gl.ACTIVE_ATTRIBUTES,
        ActiveAttributeMaxLength = Gl.ACTIVE_ATTRIBUTE_MAX_LENGTH,
        ActiveUniforms = Gl.ACTIVE_UNIFORMS,
        ActiveUniformBlocks = Gl.ACTIVE_UNIFORM_BLOCKS,
        ActiveUniformBlockMaxNameLength = Gl.ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH,
        ActiveUniformMaxLength = Gl.ACTIVE_UNIFORM_MAX_LENGTH,
        ComputeWorkGroupSize = Gl.COMPUTE_WORK_GROUP_SIZE,
        ProgramBinaryLength = Gl.PROGRAM_BINARY_LENGTH,
        TransformFeedbackBufferMode = Gl.TRANSFORM_FEEDBACK_BUFFER_MODE,
        TransformFeedbackVaryings = Gl.TRANSFORM_FEEDBACK_VARYINGS,
        TransformFeedbackVaryingMaxLength = Gl.TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH,
        GeometryVerticesOut = Gl.GEOMETRY_VERTICES_OUT,
        GeometryInputType = Gl.GEOMETRY_INPUT_TYPE,
        GeometryOutputType = Gl.GEOMETRY_OUTPUT_TYPE,
    }

    public enum PrimitiveType
    {
        Lines = Gl.LINES,
        LinesAdjacency = Gl.LINES_ADJACENCY,
        LineLoop = Gl.LINE_LOOP,
        LineStrip = Gl.LINE_STRIP,
        LineStripAdjacency = Gl.LINE_STRIP_ADJACENCY,
        Patches = Gl.PATCHES,
        Points = Gl.POINTS,
        Polygon = Gl.POLYGON,
        Quads = Gl.QUADS,
        QuadStrip = Gl.QUAD_STRIP,
        Triangles = Gl.TRIANGLES,
        TrianglesAdjacency = Gl.TRIANGLES_ADJACENCY,
        TriangleFan = Gl.TRIANGLE_FAN,
        TriangleStrip = Gl.TRIANGLE_STRIP,
        TriangleStripAdjacency = Gl.TRIANGLE_STRIP_ADJACENCY,
    }

    public enum BufferTarget
    {
        ArrayBuffer = Gl.ARRAY_BUFFER,
        AtomicCounterBuffer = Gl.ATOMIC_COUNTER_BUFFER,
        CopyReadBuffer = Gl.COPY_READ_BUFFER,
        CopyWriteBuffer = Gl.COPY_WRITE_BUFFER,
        DispatchIndirectBuffer = Gl.DISPATCH_INDIRECT_BUFFER,
        DrawIndirectBuffer = Gl.DRAW_INDIRECT_BUFFER,
        ElementArrayBuffer = Gl.ELEMENT_ARRAY_BUFFER,
        PixelPackBuffer = Gl.PIXEL_PACK_BUFFER,
        PixelUnpackBuffer = Gl.PIXEL_UNPACK_BUFFER,
        QueryBuffer = Gl.QUERY_BUFFER,
        ShaderStorageBuffer = Gl.SHADER_STORAGE_BUFFER,
        TextureBuffer = Gl.TEXTURE_BUFFER,
        TransformFeedbackBuffer = Gl.TRANSFORM_FEEDBACK_BUFFER,
        UniformBuffer = Gl.UNIFORM_BUFFER,
    }

    public enum BufferUsage
    {
        StreamDraw = Gl.STREAM_DRAW,
        StreamRead = Gl.STREAM_READ,
        StreamCopy = Gl.STREAM_COPY,
        StaticDraw = Gl.STATIC_DRAW,
        StaticRead = Gl.STATIC_READ,
        StaticCopy = Gl.STATIC_COPY,
        DynamicDraw = Gl.DYNAMIC_DRAW,
        DynamicRead = Gl.DYNAMIC_READ,
        DynamicCopy = Gl.DYNAMIC_COPY,
    }

    public enum ShaderType
    {
        ComputeShader = Gl.COMPUTE_SHADER,
        VertexShader = Gl.VERTEX_SHADER,
        TessControlShader = Gl.TESS_CONTROL_SHADER,
        TessEvaluationShader = Gl.TESS_EVALUATION_SHADER,
        GeometryShader = Gl.GEOMETRY_SHADER,
        FragmentShader = Gl.FRAGMENT_SHADER,
    }

    public enum FramebufferTarget
    {
        Framebuffer = Gl.FRAMEBUFFER,
        DrawFramebuffer = Gl.DRAW_FRAMEBUFFER,
        ReadFramebuffer = Gl.READ_FRAMEBUFFER,
    }

    public enum FramebufferAttachment
    {
        MaxColorAttachments = Gl.MAX_COLOR_ATTACHMENTS,
        ColorAttachment0 = Gl.COLOR_ATTACHMENT0,
        ColorAttachment1 = Gl.COLOR_ATTACHMENT1,
        ColorAttachment2 = Gl.COLOR_ATTACHMENT2,
        ColorAttachment3 = Gl.COLOR_ATTACHMENT3,
        ColorAttachment4 = Gl.COLOR_ATTACHMENT4,
        ColorAttachment5 = Gl.COLOR_ATTACHMENT5,
        ColorAttachment6 = Gl.COLOR_ATTACHMENT6,
        ColorAttachment7 = Gl.COLOR_ATTACHMENT7,
        ColorAttachment8 = Gl.COLOR_ATTACHMENT8,
        ColorAttachment9 = Gl.COLOR_ATTACHMENT9,
        ColorAttachment10 = Gl.COLOR_ATTACHMENT10,
        ColorAttachment11 = Gl.COLOR_ATTACHMENT11,
        ColorAttachment12 = Gl.COLOR_ATTACHMENT12,
        ColorAttachment13 = Gl.COLOR_ATTACHMENT13,
        ColorAttachment14 = Gl.COLOR_ATTACHMENT14,
        ColorAttachment15 = Gl.COLOR_ATTACHMENT15,
        ColorAttachment16 = Gl.COLOR_ATTACHMENT16,
        ColorAttachment17 = Gl.COLOR_ATTACHMENT17,
        ColorAttachment18 = Gl.COLOR_ATTACHMENT18,
        ColorAttachment19 = Gl.COLOR_ATTACHMENT19,
        ColorAttachment20 = Gl.COLOR_ATTACHMENT20,
        ColorAttachment21 = Gl.COLOR_ATTACHMENT21,
        ColorAttachment22 = Gl.COLOR_ATTACHMENT22,
        ColorAttachment23 = Gl.COLOR_ATTACHMENT23,
        ColorAttachment24 = Gl.COLOR_ATTACHMENT24,
        ColorAttachment25 = Gl.COLOR_ATTACHMENT25,
        ColorAttachment26 = Gl.COLOR_ATTACHMENT26,
        ColorAttachment27 = Gl.COLOR_ATTACHMENT27,
        ColorAttachment28 = Gl.COLOR_ATTACHMENT28,
        ColorAttachment29 = Gl.COLOR_ATTACHMENT29,
        ColorAttachment30 = Gl.COLOR_ATTACHMENT30,
        ColorAttachment31 = Gl.COLOR_ATTACHMENT31,
        DepthAttachment = Gl.DEPTH_ATTACHMENT,
    }

    public enum TextureTarget
    {
        ProxyTexture1d = Gl.PROXY_TEXTURE_1D,
        ProxyTexture1dArray = Gl.PROXY_TEXTURE_1D_ARRAY,
        ProxyTexture2d = Gl.PROXY_TEXTURE_2D,
        ProxyTexture2dArray = Gl.PROXY_TEXTURE_2D_ARRAY,
        ProxyTexture2dMultisample = Gl.PROXY_TEXTURE_2D_MULTISAMPLE,
        ProxyTexture2dMultisampleArray = Gl.PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY,
        ProxyTexture3d = Gl.PROXY_TEXTURE_3D,
        ProxyTextureCubeMap = Gl.PROXY_TEXTURE_CUBE_MAP,
        ProxyTextureCubeMapArray = Gl.PROXY_TEXTURE_CUBE_MAP_ARRAY,
        ProxyTextureRectangle = Gl.PROXY_TEXTURE_RECTANGLE,
        Texture1d = Gl.TEXTURE_1D,
        Texture2d = Gl.TEXTURE_2D,
        Texture3d = Gl.TEXTURE_3D,
        TextureRectangle = Gl.TEXTURE_RECTANGLE,
        TextureCubeMap = Gl.TEXTURE_CUBE_MAP,
        TextureCubeMapPositiveX = Gl.TEXTURE_CUBE_MAP_POSITIVE_X,
        TextureCubeMapNegativeX = Gl.TEXTURE_CUBE_MAP_NEGATIVE_X,
        TextureCubeMapPositiveY = Gl.TEXTURE_CUBE_MAP_POSITIVE_Y,
        TextureCubeMapNegativeY = Gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,
        TextureCubeMapPositiveZ = Gl.TEXTURE_CUBE_MAP_POSITIVE_Z,
        TextureCubeMapNegativeZ = Gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,
        TextureCubeMapArray = Gl.TEXTURE_CUBE_MAP_ARRAY,
        Texture1dArray = Gl.TEXTURE_1D_ARRAY,
        Texture2dArray = Gl.TEXTURE_2D_ARRAY,
        Texture2dMultisample = Gl.TEXTURE_2D_MULTISAMPLE,
        Texture2dMultisampleArray = Gl.TEXTURE_2D_MULTISAMPLE_ARRAY,
    }

    public enum FramebufferStatus
    {
        FramebufferComplete = Gl.FRAMEBUFFER_COMPLETE,
        FramebufferUndefined = Gl.FRAMEBUFFER_UNDEFINED,
        FramebufferIncompleteAttachment = Gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT,
        FramebufferIncompleteMissingAttachment = Gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT,
        FramebufferIncompleteDrawBuffer = Gl.FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER,
        FramebufferIncompleteReadBuffer = Gl.FRAMEBUFFER_INCOMPLETE_READ_BUFFER,
        FramebufferUnsupported = Gl.FRAMEBUFFER_UNSUPPORTED,
        FramebufferIncompleteMultisample = Gl.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE,
        FramebufferIncompleteLayerTargets = Gl.FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS,
    }


    public enum TextureParameterName
    {
        GenerateMipmap = Gl.GENERATE_MIPMAP,
        TextureBorderColor = Gl.TEXTURE_BORDER_COLOR,
        TextureMagFilter = Gl.TEXTURE_MAG_FILTER,
        TextureMinFilter = Gl.TEXTURE_MIN_FILTER,
        TexturePriority = Gl.TEXTURE_PRIORITY,
        TextureWrapR = Gl.TEXTURE_WRAP_R,
        TextureWrapS = Gl.TEXTURE_WRAP_S,
        TextureWrapT = Gl.TEXTURE_WRAP_T,
        TextureBaseLevel = Gl.TEXTURE_BASE_LEVEL,
        TextureCompareMode = Gl.TEXTURE_COMPARE_MODE,
        TextureCompareFunc = Gl.TEXTURE_COMPARE_FUNC,
        TextureLodBias = Gl.TEXTURE_LOD_BIAS,
        TextureMinLod = Gl.TEXTURE_MIN_LOD,
        TextureMaxLod = Gl.TEXTURE_MAX_LOD,
        TextureMaxLevel = Gl.TEXTURE_MAX_LEVEL,
        TextureSwizzleR = Gl.TEXTURE_SWIZZLE_R,
        TextureSwizzleG = Gl.TEXTURE_SWIZZLE_G,
        TextureSwizzleB = Gl.TEXTURE_SWIZZLE_B,
        TextureSwizzleA = Gl.TEXTURE_SWIZZLE_A,
        TextureSwizzleRgba = Gl.TEXTURE_SWIZZLE_RGBA,
        DepthStencilTextureMode = Gl.DEPTH_STENCIL_TEXTURE_MODE,
        TextureAlphaSize = Gl.TEXTURE_ALPHA_SIZE,
        TextureBlueSize = Gl.TEXTURE_BLUE_SIZE,
        TextureBorder = Gl.TEXTURE_BORDER,
        TextureComponents = Gl.TEXTURE_COMPONENTS,
        TextureInternalFormat = Gl.TEXTURE_INTERNAL_FORMAT,
        TextureDepth = Gl.TEXTURE_DEPTH,
        TextureGreenSize = Gl.TEXTURE_GREEN_SIZE,
        TextureHeight = Gl.TEXTURE_HEIGHT,
        TextureIntensitySize = Gl.TEXTURE_INTENSITY_SIZE,
        TextureLuminanceSize = Gl.TEXTURE_LUMINANCE_SIZE,
        TextureRedSize = Gl.TEXTURE_RED_SIZE,
        TextureResident = Gl.TEXTURE_RESIDENT,
        TextureWidth = Gl.TEXTURE_WIDTH,
    }

    public enum InternalFormat
    {
        Alpha12 = Gl.ALPHA12,
        Alpha16 = Gl.ALPHA16,
        Alpha4 = Gl.ALPHA4,
        Alpha8 = Gl.ALPHA8,
        Intensity = Gl.INTENSITY,
        Intensity12 = Gl.INTENSITY12,
        Intensity16 = Gl.INTENSITY16,
        Intensity4 = Gl.INTENSITY4,
        Intensity8 = Gl.INTENSITY8,
        Luminance12 = Gl.LUMINANCE12,
        Luminance12Alpha12 = Gl.LUMINANCE12_ALPHA12,
        Luminance12Alpha4 = Gl.LUMINANCE12_ALPHA4,
        Luminance16 = Gl.LUMINANCE16,
        Luminance16Alpha16 = Gl.LUMINANCE16_ALPHA16,
        Luminance4 = Gl.LUMINANCE4,
        Luminance4Alpha4 = Gl.LUMINANCE4_ALPHA4,
        Luminance6Alpha2 = Gl.LUMINANCE6_ALPHA2,
        Luminance8 = Gl.LUMINANCE8,
        Luminance8Alpha8 = Gl.LUMINANCE8_ALPHA8,
        Red = Gl.RED,
        R8 = Gl.R8,
        R8Snorm = Gl.R8_SNORM,
        R16 = Gl.R16,
        R16Snorm = Gl.R16_SNORM,
        R16f = Gl.R16F,
        R32f = Gl.R32F,
        R8i = Gl.R8I,
        R16i = Gl.R16I,
        R32i = Gl.R32I,
        R8ui = Gl.R8UI,
        R16ui = Gl.R16UI,
        R32ui = Gl.R32UI,
        Rg = Gl.RG,
        Rg8 = Gl.RG8,
        Rg8Snorm = Gl.RG8_SNORM,
        Rg16 = Gl.RG16,
        Rg16Snorm = Gl.RG16_SNORM,
        Rg16f = Gl.RG16F,
        Rg32f = Gl.RG32F,
        Rg8i = Gl.RG8I,
        Rg16i = Gl.RG16I,
        Rg32i = Gl.RG32I,
        Rg8ui = Gl.RG8UI,
        Rg16ui = Gl.RG16UI,
        Rg32ui = Gl.RG32UI,
        Rgb = Gl.RGB,
        Rgb4 = Gl.RGB4,
        Rgb5 = Gl.RGB5,
        Rgb8 = Gl.RGB8,
        Rgb8Snorm = Gl.RGB8_SNORM,
        Rgb10 = Gl.RGB10,
        Rgb12 = Gl.RGB12,
        Rgb16 = Gl.RGB16,
        Rgb16f = Gl.RGB16F,
        Rgb16Snorm = Gl.RGB16_SNORM,
        Rgb8i = Gl.RGB8I,
        Rgb16i = Gl.RGB16I,
        Rgb32i = Gl.RGB32I,
        Rgb8ui = Gl.RGB8UI,
        Rgb16ui = Gl.RGB16UI,
        Rgb32ui = Gl.RGB32UI,
        Srgb = Gl.SRGB,
        SrgbAlpha = Gl.SRGB_ALPHA,
        Srgb8 = Gl.SRGB8,
        Srgb8Alpha8 = Gl.SRGB8_ALPHA8,
        R3G3B2 = Gl.R3_G3_B2,
        R11fG11fB10f = Gl.R11F_G11F_B10F,
        Rgb9E5 = Gl.RGB9_E5,
        Rgba = Gl.RGBA,
        Rgba4 = Gl.RGBA4,
        Rgb5A1 = Gl.RGB5_A1,
        Rgba8 = Gl.RGBA8,
        Rgba8Snorm = Gl.RGBA8_SNORM,
        Rgb10A2 = Gl.RGB10_A2,
        Rgba12 = Gl.RGBA12,
        Rgba16 = Gl.RGBA16,
        Rgba16f = Gl.RGBA16F,
        Rgba32f = Gl.RGBA32F,
        Rgba8i = Gl.RGBA8I,
        Rgba16i = Gl.RGBA16I,
        Rgba32i = Gl.RGBA32I,
        Rgba8ui = Gl.RGBA8UI,
        Rgba16ui = Gl.RGBA16UI,
        Rgba32ui = Gl.RGBA32UI,
        Rgb10A2ui = Gl.RGB10_A2UI,
        DepthComponent = Gl.DEPTH_COMPONENT,
        DepthComponent16 = Gl.DEPTH_COMPONENT16,
        DepthComponent24 = Gl.DEPTH_COMPONENT24,
        DepthComponent32 = Gl.DEPTH_COMPONENT32,
        DepthComponent32f = Gl.DEPTH_COMPONENT32F,
        DepthStencil = Gl.DEPTH_STENCIL,
        Depth24Stencil8 = Gl.DEPTH24_STENCIL8,
        Depth32fStencil8 = Gl.DEPTH32F_STENCIL8,
        CompressedRed = Gl.COMPRESSED_RED,
        CompressedRg = Gl.COMPRESSED_RG,
        CompressedRgb = Gl.COMPRESSED_RGB,
        CompressedRgba = Gl.COMPRESSED_RGBA,
        CompressedSrgb = Gl.COMPRESSED_SRGB,
        CompressedSrgbAlpha = Gl.COMPRESSED_SRGB_ALPHA,
        CompressedRedRgtc1 = Gl.COMPRESSED_RED_RGTC1,
        CompressedSignedRedRgtc1 = Gl.COMPRESSED_SIGNED_RED_RGTC1,
        CompressedR11Eac = Gl.COMPRESSED_R11_EAC,
        CompressedSignedR11Eac = Gl.COMPRESSED_SIGNED_R11_EAC,
        CompressedRgRgtc2 = Gl.COMPRESSED_RG_RGTC2,
        CompressedSignedRgRgtc2 = Gl.COMPRESSED_SIGNED_RG_RGTC2,
        CompressedRgbaBptcUnorm = Gl.COMPRESSED_RGBA_BPTC_UNORM,
        CompressedSrgbAlphaBptcUnorm = Gl.COMPRESSED_SRGB_ALPHA_BPTC_UNORM,
        CompressedRgbBptcSignedFloat = Gl.COMPRESSED_RGB_BPTC_SIGNED_FLOAT,
        CompressedRgbBptcUnsignedFloat = Gl.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT,
        CompressedRgb8Etc2 = Gl.COMPRESSED_RGB8_ETC2,
        CompressedSrgb8Etc2 = Gl.COMPRESSED_SRGB8_ETC2,
        CompressedRgb8PunchthroughAlpha1Etc2 = Gl.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,
        CompressedSrgb8PunchthroughAlpha1Etc2 = Gl.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,
        CompressedRgba8Etc2Eac = Gl.COMPRESSED_RGBA8_ETC2_EAC,
        CompressedSrgb8Alpha8Etc2Eac = Gl.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC,
        CompressedRg11Eac = Gl.COMPRESSED_RG11_EAC,
        CompressedSignedRg11Eac = Gl.COMPRESSED_SIGNED_RG11_EAC,
    }

    public enum PixelType
    {
        Bitmap = Gl.BITMAP,
        Byte = Gl.BYTE,
        Float = Gl.FLOAT,
        Int = Gl.INT,
        Short = Gl.SHORT,
        UnsignedByte = Gl.UNSIGNED_BYTE,
        UnsignedByte332 = Gl.UNSIGNED_BYTE_3_3_2,
        UnsignedInt = Gl.UNSIGNED_INT,
        UnsignedInt1010102 = Gl.UNSIGNED_INT_10_10_10_2,
        UnsignedInt8888 = Gl.UNSIGNED_INT_8_8_8_8,
        UnsignedShort = Gl.UNSIGNED_SHORT,
        UnsignedShort4444 = Gl.UNSIGNED_SHORT_4_4_4_4,
        UnsignedShort5551 = Gl.UNSIGNED_SHORT_5_5_5_1,
        Double = Gl.DOUBLE,
        HalfFloat = Gl.HALF_FLOAT,
        UnsignedByte233Rev = Gl.UNSIGNED_BYTE_2_3_3_REV,
        UnsignedShort565 = Gl.UNSIGNED_SHORT_5_6_5,
        UnsignedShort1555Rev = Gl.UNSIGNED_SHORT_1_5_5_5_REV,
        UnsignedShort565Rev = Gl.UNSIGNED_SHORT_5_6_5_REV,
        UnsignedInt2101010Rev = Gl.UNSIGNED_INT_2_10_10_10_REV,
    }

    public enum GetTextureParameter
    {
        GenerateMipmap = Gl.GENERATE_MIPMAP,
        TextureAlphaSize = Gl.TEXTURE_ALPHA_SIZE,
        TextureBaseLevel = Gl.TEXTURE_BASE_LEVEL,
        TextureBlueSize = Gl.TEXTURE_BLUE_SIZE,
        TextureBorder = Gl.TEXTURE_BORDER,
        TextureBorderColor = Gl.TEXTURE_BORDER_COLOR,
        TextureComponents = Gl.TEXTURE_COMPONENTS,
        TextureInternalFormat = Gl.TEXTURE_INTERNAL_FORMAT,
        TextureDepth = Gl.TEXTURE_DEPTH,
        TextureGreenSize = Gl.TEXTURE_GREEN_SIZE,
        TextureHeight = Gl.TEXTURE_HEIGHT,
        TextureIntensitySize = Gl.TEXTURE_INTENSITY_SIZE,
        TextureLuminanceSize = Gl.TEXTURE_LUMINANCE_SIZE,
        TextureMagFilter = Gl.TEXTURE_MAG_FILTER,
        TextureMaxLevel = Gl.TEXTURE_MAX_LEVEL,
        TextureMaxLod = Gl.TEXTURE_MAX_LOD,
        TextureMinFilter = Gl.TEXTURE_MIN_FILTER,
        TextureMinLod = Gl.TEXTURE_MIN_LOD,
        TexturePriority = Gl.TEXTURE_PRIORITY,
        TextureRedSize = Gl.TEXTURE_RED_SIZE,
        TextureResident = Gl.TEXTURE_RESIDENT,
        TextureWidth = Gl.TEXTURE_WIDTH,
        TextureWrapR = Gl.TEXTURE_WRAP_R,
        TextureWrapS = Gl.TEXTURE_WRAP_S,
        TextureWrapT = Gl.TEXTURE_WRAP_T,
    }

    public enum PixelStoreParameter
    {
        PackAlignment = Gl.PACK_ALIGNMENT,
        PackImageHeight = Gl.PACK_IMAGE_HEIGHT,
        PackLsbFirst = Gl.PACK_LSB_FIRST,
        PackRowLength = Gl.PACK_ROW_LENGTH,
        PackSkipImages = Gl.PACK_SKIP_IMAGES,
        PackSkipPixels = Gl.PACK_SKIP_PIXELS,
        PackSkipRows = Gl.PACK_SKIP_ROWS,
        PackSwapBytes = Gl.PACK_SWAP_BYTES,
        UnpackAlignment = Gl.UNPACK_ALIGNMENT,
        UnpackImageHeight = Gl.UNPACK_IMAGE_HEIGHT,
        UnpackLsbFirst = Gl.UNPACK_LSB_FIRST,
        UnpackRowLength = Gl.UNPACK_ROW_LENGTH,
        UnpackSkipImages = Gl.UNPACK_SKIP_IMAGES,
        UnpackSkipPixels = Gl.UNPACK_SKIP_PIXELS,
        UnpackSkipRows = Gl.UNPACK_SKIP_ROWS,
        UnpackSwapBytes = Gl.UNPACK_SWAP_BYTES,
    }
    public enum TextureMagFilter
    {
        Linear = Gl.LINEAR,
        Nearest = Gl.NEAREST,
    }

    public enum TextureMinFilter
    {
        Linear = Gl.LINEAR,
        LinearMipmapLinear = Gl.LINEAR_MIPMAP_LINEAR,
        LinearMipmapNearest = Gl.LINEAR_MIPMAP_NEAREST,
        Nearest = Gl.NEAREST,
        NearestMipmapLinear = Gl.NEAREST_MIPMAP_LINEAR,
        NearestMipmapNearest = Gl.NEAREST_MIPMAP_NEAREST,
    }

    public enum TextureWrapMode
    {
        Clamp = Gl.CLAMP,
        ClampToBorder = Gl.CLAMP_TO_BORDER,
        ClampToEdge = Gl.CLAMP_TO_EDGE,
        Repeat = Gl.REPEAT,
    }

    public enum TextureUnit
    {
        Texture0 = Gl.TEXTURE0,
        Texture1 = Gl.TEXTURE1,
        Texture2 = Gl.TEXTURE2,
        Texture3 = Gl.TEXTURE3,
        Texture4 = Gl.TEXTURE4,
        Texture5 = Gl.TEXTURE5,
        Texture6 = Gl.TEXTURE6,
        Texture7 = Gl.TEXTURE7,
        Texture8 = Gl.TEXTURE8,
        Texture9 = Gl.TEXTURE9,
        Texture10 = Gl.TEXTURE10,
        Texture11 = Gl.TEXTURE11,
        Texture12 = Gl.TEXTURE12,
        Texture13 = Gl.TEXTURE13,
        Texture14 = Gl.TEXTURE14,
        Texture15 = Gl.TEXTURE15,
        Texture16 = Gl.TEXTURE16,
        Texture17 = Gl.TEXTURE17,
        Texture18 = Gl.TEXTURE18,
        Texture19 = Gl.TEXTURE19,
        Texture20 = Gl.TEXTURE20,
        Texture21 = Gl.TEXTURE21,
        Texture22 = Gl.TEXTURE22,
        Texture23 = Gl.TEXTURE23,
        Texture24 = Gl.TEXTURE24,
        Texture25 = Gl.TEXTURE25,
        Texture26 = Gl.TEXTURE26,
        Texture27 = Gl.TEXTURE27,
        Texture28 = Gl.TEXTURE28,
        Texture29 = Gl.TEXTURE29,
        Texture30 = Gl.TEXTURE30,
        Texture31 = Gl.TEXTURE31,
    }


    public static partial class Gl
    {
        public const int MAX_CLIP_DISTANCES = 0x0D32;
        public const int _2_BYTES = 0x1407;
        public const int _2D = 0x0600;
        public const int _3_BYTES = 0x1408;
        public const int _3D = 0x0601;
        public const int _3D_COLOR = 0x0602;
        public const int _3D_COLOR_TEXTURE = 0x0603;
        public const int _4_BYTES = 0x1409;
        public const int _4D_COLOR_TEXTURE = 0x0604;
        public const int ABGR_EXT = 0x8000;
        public const int ACCUM = 0x0100;
        public const int ACCUM_ALPHA_BITS = 0x0D5B;
        public const int ACCUM_BLUE_BITS = 0x0D5A;
        public const int ACCUM_CLEAR_VALUE = 0x0B80;
        public const int ACCUM_GREEN_BITS = 0x0D59;
        public const int ACCUM_RED_BITS = 0x0D58;
        public const int ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
        public const int ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
        public const int ACTIVE_ATTRIBUTES = 0x8B89;
        public const int ACTIVE_PROGRAM = 0x8259;
        public const int ACTIVE_RESOURCES = 0x92F5;
        public const int ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
        public const int ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
        public const int ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
        public const int ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
        public const int ACTIVE_SUBROUTINES = 0x8DE5;
        public const int ACTIVE_TEXTURE = 0x84E0;
        public const int ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
        public const int ACTIVE_UNIFORM_BLOCKS = 0x8A36;
        public const int ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
        public const int ACTIVE_UNIFORMS = 0x8B86;
        public const int ACTIVE_VARIABLES = 0x9305;
        public const int ADD = 0x0104;
        public const int ADD_SIGNED = 0x8574;
        public const int ALIASED_LINE_WIDTH_RANGE = 0x846E;
        public const int ALIASED_POINT_SIZE_RANGE = 0x846D;
        public const int ALPHA = 0x1906;
        public const int ALPHA12 = 0x803D;
        public const int ALPHA16 = 0x803E;
        public const int ALPHA4 = 0x803B;
        public const int ALPHA8 = 0x803C;
        public const int ALPHA_BIAS = 0x0D1D;
        public const int ALPHA_BITS = 0x0D55;
        public const int ALPHA_INTEGER = 0x8D97;
        public const int ALPHA_SCALE = 0x0D1C;
        public const int ALPHA_TEST = 0x0BC0;
        public const int ALPHA_TEST_FUNC = 0x0BC1;
        public const int ALPHA_TEST_REF = 0x0BC2;
        public const int ALREADY_SIGNALED = 0x911A;
        public const int ALWAYS = 0x0207;
        public const int AMBIENT = 0x1200;
        public const int AMBIENT_AND_DIFFUSE = 0x1602;
        public const int AND = 0x1501;
        public const int AND_INVERTED = 0x1504;
        public const int AND_REVERSE = 0x1502;
        public const int ANY_SAMPLES_PASSED = 0x8C2F;
        public const int ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
        public const int ARRAY_BUFFER = 0x8892;
        public const int ARRAY_SIZE = 0x92FB;
        public const int ARRAY_STRIDE = 0x92FE;
        public const int ATOMIC_COUNTER_BUFFER = 0x92C0;
        public const int ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
        public const int ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
        public const int ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
        public const int ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
        public const int ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
        public const int ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
        public const int ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
        public const int ATOMIC_COUNTER_BUFFER_START = 0x92C2;
        public const int ATTACHED_SHADERS = 0x8B85;
        public const int ATTRIB_STACK_DEPTH = 0x0BB0;
        public const int AUTO_GENERATE_MIPMAP = 0x8295;
        public const int AUTO_NORMAL = 0x0D80;
        public const int AUX0 = 0x0409;
        public const int AUX1 = 0x040A;
        public const int AUX2 = 0x040B;
        public const int AUX3 = 0x040C;
        public const int AUX_BUFFERS = 0x0C00;
        public const int BACK = 0x0405;
        public const int BACK_LEFT = 0x0402;
        public const int BACK_RIGHT = 0x0403;
        public const int BGR = 0x80E0;
        public const int BGR_INTEGER = 0x8D9A;
        public const int BGRA = 0x80E1;
        public const int BGRA_INTEGER = 0x8D9B;
        public const int BITMAP = 0x1A00;
        public const int BITMAP_TOKEN = 0x0704;
        public const int BLEND = 0x0BE2;
        public const int BLEND_COLOR = 0x8005;
        public const int BLEND_DST = 0x0BE0;
        public const int BLEND_DST_ALPHA = 0x80CA;
        public const int BLEND_DST_RGB = 0x80C8;
        public const int BLEND_EQUATION = 0x8009;
        public const int BLEND_EQUATION_ALPHA = 0x883D;
        public const int BLEND_EQUATION_RGB = 0x8009;
        public const int BLEND_SRC = 0x0BE1;
        public const int BLEND_SRC_ALPHA = 0x80CB;
        public const int BLEND_SRC_RGB = 0x80C9;
        public const int BLOCK_INDEX = 0x92FD;
        public const int BLUE = 0x1905;
        public const int BLUE_BIAS = 0x0D1B;
        public const int BLUE_BITS = 0x0D54;
        public const int BLUE_INTEGER = 0x8D96;
        public const int BLUE_SCALE = 0x0D1A;
        public const int BOOL = 0x8B56;
        public const int BOOL_VEC2 = 0x8B57;
        public const int BOOL_VEC3 = 0x8B58;
        public const int BOOL_VEC4 = 0x8B59;
        public const int BUFFER = 0x82E0;
        public const int BUFFER_ACCESS_FLAGS = 0x911F;
        public const int BUFFER_BINDING = 0x9302;
        public const int BUFFER_DATA_SIZE = 0x9303;
        public const int BUFFER_MAP_LENGTH = 0x9120;
        public const int BUFFER_MAP_OFFSET = 0x9121;
        public const int BUFFER_VARIABLE = 0x92E5;
        public const int BYTE = 0x1400;
        public const int C3F_V3F = 0x2A24;
        public const int C4F_N3F_V3F = 0x2A26;
        public const int C4UB_V2F = 0x2A22;
        public const int C4UB_V3F = 0x2A23;
        public const int CAVEAT_SUPPORT = 0x82B8;
        public const int CCW = 0x0901;
        public const int CLAMP = 0x2900;
        public const int CLAMP_FRAGMENT_COLOR = 0x891B;
        public const int CLAMP_READ_COLOR = 0x891C;
        public const int CLAMP_TO_BORDER = 0x812D;
        public const int CLAMP_TO_EDGE = 0x812F;
        public const int CLAMP_VERTEX_COLOR = 0x891A;
        public const int CLEAR = 0x1500;
        public const int CLEAR_BUFFER = 0x82B4;
        public const int CLIENT_ACTIVE_TEXTURE = 0x84E1;
        public const int CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
        public const int CLIP_DISTANCE0 = 0x3000;
        public const int CLIP_DISTANCE1 = 0x3001;
        public const int CLIP_DISTANCE2 = 0x3002;
        public const int CLIP_DISTANCE3 = 0x3003;
        public const int CLIP_DISTANCE4 = 0x3004;
        public const int CLIP_DISTANCE5 = 0x3005;
        public const int CLIP_DISTANCE6 = 0x3006;
        public const int CLIP_DISTANCE7 = 0x3007;
        public const int CLIP_PLANE0 = 0x3000;
        public const int CLIP_PLANE1 = 0x3001;
        public const int CLIP_PLANE2 = 0x3002;
        public const int CLIP_PLANE3 = 0x3003;
        public const int CLIP_PLANE4 = 0x3004;
        public const int CLIP_PLANE5 = 0x3005;
        public const int CMYK_EXT = 0x800C;
        public const int CMYKA_EXT = 0x800D;
        public const int COEFF = 0x0A00;
        public const int COLOR = 0x1800;
        public const int COLOR_ARRAY = 0x8076;
        public const int COLOR_ARRAY_POINTER = 0x8090;
        public const int COLOR_ARRAY_SIZE = 0x8081;
        public const int COLOR_ARRAY_STRIDE = 0x8083;
        public const int COLOR_ARRAY_TYPE = 0x8082;
        public const int COLOR_ATTACHMENT0 = 0x8CE0;
        public const int COLOR_ATTACHMENT1 = 0x8CE1;
        public const int COLOR_ATTACHMENT10 = 0x8CEA;
        public const int COLOR_ATTACHMENT11 = 0x8CEB;
        public const int COLOR_ATTACHMENT12 = 0x8CEC;
        public const int COLOR_ATTACHMENT13 = 0x8CED;
        public const int COLOR_ATTACHMENT14 = 0x8CEE;
        public const int COLOR_ATTACHMENT15 = 0x8CEF;
        public const int COLOR_ATTACHMENT16 = 0x8CF0;
        public const int COLOR_ATTACHMENT17 = 0x8CF1;
        public const int COLOR_ATTACHMENT18 = 0x8CF2;
        public const int COLOR_ATTACHMENT19 = 0x8CF3;
        public const int COLOR_ATTACHMENT2 = 0x8CE2;
        public const int COLOR_ATTACHMENT20 = 0x8CF4;
        public const int COLOR_ATTACHMENT21 = 0x8CF5;
        public const int COLOR_ATTACHMENT22 = 0x8CF6;
        public const int COLOR_ATTACHMENT23 = 0x8CF7;
        public const int COLOR_ATTACHMENT24 = 0x8CF8;
        public const int COLOR_ATTACHMENT25 = 0x8CF9;
        public const int COLOR_ATTACHMENT26 = 0x8CFA;
        public const int COLOR_ATTACHMENT27 = 0x8CFB;
        public const int COLOR_ATTACHMENT28 = 0x8CFC;
        public const int COLOR_ATTACHMENT29 = 0x8CFD;
        public const int COLOR_ATTACHMENT3 = 0x8CE3;
        public const int COLOR_ATTACHMENT30 = 0x8CFE;
        public const int COLOR_ATTACHMENT31 = 0x8CFF;
        public const int COLOR_ATTACHMENT4 = 0x8CE4;
        public const int COLOR_ATTACHMENT5 = 0x8CE5;
        public const int COLOR_ATTACHMENT6 = 0x8CE6;
        public const int COLOR_ATTACHMENT7 = 0x8CE7;
        public const int COLOR_ATTACHMENT8 = 0x8CE8;
        public const int COLOR_ATTACHMENT9 = 0x8CE9;
        public const int COLOR_CLEAR_VALUE = 0x0C22;
        public const int COLOR_COMPONENTS = 0x8283;
        public const int COLOR_ENCODING = 0x8296;
        public const int COLOR_INDEX = 0x1900;
        public const int COLOR_INDEXES = 0x1603;
        public const int COLOR_LOGIC_OP = 0x0BF2;
        public const int COLOR_MATERIAL = 0x0B57;
        public const int COLOR_MATERIAL_FACE = 0x0B55;
        public const int COLOR_MATERIAL_PARAMETER = 0x0B56;
        public const int COLOR_MATRIX = 0x80B1;
        public const int COLOR_MATRIX_STACK_DEPTH = 0x80B2;
        public const int COLOR_RENDERABLE = 0x8286;
        public const int COLOR_SUM = 0x8458;
        public const int COLOR_TABLE = 0x80D0;
        public const int COLOR_TABLE_ALPHA_SIZE = 0x80DD;
        public const int COLOR_TABLE_BIAS = 0x80D7;
        public const int COLOR_TABLE_BLUE_SIZE = 0x80DC;
        public const int COLOR_TABLE_FORMAT = 0x80D8;
        public const int COLOR_TABLE_GREEN_SIZE = 0x80DB;
        public const int COLOR_TABLE_INTENSITY_SIZE = 0x80DF;
        public const int COLOR_TABLE_LUMINANCE_SIZE = 0x80DE;
        public const int COLOR_TABLE_RED_SIZE = 0x80DA;
        public const int COLOR_TABLE_SCALE = 0x80D6;
        public const int COLOR_TABLE_WIDTH = 0x80D9;
        public const int COLOR_WRITEMASK = 0x0C23;
        public const int COMBINE = 0x8570;
        public const int COMBINE_ALPHA = 0x8572;
        public const int COMBINE_RGB = 0x8571;
        public const int COMPARE_R_TO_TEXTURE = 0x884E;
        public const int COMPATIBLE_SUBROUTINES = 0x8E4B;
        public const int COMPILE = 0x1300;
        public const int COMPILE_AND_EXECUTE = 0x1301;
        public const int COMPILE_STATUS = 0x8B81;
        public const int COMPRESSED_ALPHA = 0x84E9;
        public const int COMPRESSED_INTENSITY = 0x84EC;
        public const int COMPRESSED_LUMINANCE = 0x84EA;
        public const int COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
        public const int COMPRESSED_R11_EAC = 0x9270;
        public const int COMPRESSED_RED = 0x8225;
        public const int COMPRESSED_RED_RGTC1 = 0x8DBB;
        public const int COMPRESSED_RG = 0x8226;
        public const int COMPRESSED_RG11_EAC = 0x9272;
        public const int COMPRESSED_RG_RGTC2 = 0x8DBD;
        public const int COMPRESSED_RGB = 0x84ED;
        public const int COMPRESSED_RGB8_ETC2 = 0x9274;
        public const int COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
        public const int COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E;
        public const int COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F;
        public const int COMPRESSED_RGBA = 0x84EE;
        public const int COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
        public const int COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C;
        public const int COMPRESSED_SIGNED_R11_EAC = 0x9271;
        public const int COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
        public const int COMPRESSED_SIGNED_RG11_EAC = 0x9273;
        public const int COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
        public const int COMPRESSED_SLUMINANCE = 0x8C4A;
        public const int COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
        public const int COMPRESSED_SRGB = 0x8C48;
        public const int COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
        public const int COMPRESSED_SRGB8_ETC2 = 0x9275;
        public const int COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
        public const int COMPRESSED_SRGB_ALPHA = 0x8C49;
        public const int COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D;
        public const int COMPRESSED_TEXTURE_FORMATS = 0x86A3;
        public const int COMPUTE_SHADER = 0x91B9;
        public const int COMPUTE_SUBROUTINE = 0x92ED;
        public const int COMPUTE_SUBROUTINE_UNIFORM = 0x92F3;
        public const int COMPUTE_TEXTURE = 0x82A0;
        public const int COMPUTE_WORK_GROUP_SIZE = 0x8267;
        public const int CONDITION_SATISFIED = 0x911C;
        public const int CONSTANT = 0x8576;
        public const int CONSTANT_ALPHA = 0x8003;
        public const int CONSTANT_ATTENUATION = 0x1207;
        public const int CONSTANT_BORDER = 0x8151;
        public const int CONSTANT_COLOR = 0x8001;
        public const int CONTEXT_FLAGS = 0x821E;
        public const int CONTEXT_PROFILE_MASK = 0x9126;
        public const int CONVOLUTION_1D = 0x8010;
        public const int CONVOLUTION_2D = 0x8011;
        public const int CONVOLUTION_BORDER_COLOR = 0x8154;
        public const int CONVOLUTION_BORDER_MODE = 0x8013;
        public const int CONVOLUTION_FILTER_BIAS = 0x8015;
        public const int CONVOLUTION_FILTER_SCALE = 0x8014;
        public const int CONVOLUTION_FORMAT = 0x8017;
        public const int CONVOLUTION_HEIGHT = 0x8019;
        public const int CONVOLUTION_WIDTH = 0x8018;
        public const int COORD_REPLACE = 0x8862;
        public const int COPY = 0x1503;
        public const int COPY_INVERTED = 0x150C;
        public const int COPY_PIXEL_TOKEN = 0x0706;
        public const int COPY_READ_BUFFER = 0x8F36;
        public const int COPY_WRITE_BUFFER = 0x8F37;
        public const int CULL_FACE = 0x0B44;
        public const int CULL_FACE_MODE = 0x0B45;
        public const int CURRENT_COLOR = 0x0B00;
        public const int CURRENT_FOG_COORDINATE = 0x8453;
        public const int CURRENT_INDEX = 0x0B01;
        public const int CURRENT_NORMAL = 0x0B02;
        public const int CURRENT_PROGRAM = 0x8B8D;
        public const int CURRENT_RASTER_COLOR = 0x0B04;
        public const int CURRENT_RASTER_DISTANCE = 0x0B09;
        public const int CURRENT_RASTER_INDEX = 0x0B05;
        public const int CURRENT_RASTER_POSITION = 0x0B07;
        public const int CURRENT_RASTER_POSITION_VALID = 0x0B08;
        public const int CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
        public const int CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
        public const int CURRENT_SECONDARY_COLOR = 0x8459;
        public const int CURRENT_TEXTURE_COORDS = 0x0B03;
        public const int CURRENT_VERTEX_ATTRIB = 0x8626;
        public const int CW = 0x0900;
        public const int DEBUG_CALLBACK_FUNCTION = 0x8244;
        public const int DEBUG_CALLBACK_USER_PARAM = 0x8245;
        public const int DEBUG_GROUP_STACK_DEPTH = 0x826D;
        public const int DEBUG_LOGGED_MESSAGES = 0x9145;
        public const int DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243;
        public const int DEBUG_OUTPUT = 0x92E0;
        public const int DEBUG_OUTPUT_SYNCHRONOUS = 0x8242;
        public const int DEBUG_SEVERITY_HIGH = 0x9146;
        public const int DEBUG_SEVERITY_LOW = 0x9148;
        public const int DEBUG_SEVERITY_MEDIUM = 0x9147;
        public const int DEBUG_SEVERITY_NOTIFICATION = 0x826B;
        public const int DEBUG_SOURCE_API = 0x8246;
        public const int DEBUG_SOURCE_APPLICATION = 0x824A;
        public const int DEBUG_SOURCE_OTHER = 0x824B;
        public const int DEBUG_SOURCE_SHADER_COMPILER = 0x8248;
        public const int DEBUG_SOURCE_THIRD_PARTY = 0x8249;
        public const int DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247;
        public const int DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D;
        public const int DEBUG_TYPE_ERROR = 0x824C;
        public const int DEBUG_TYPE_MARKER = 0x8268;
        public const int DEBUG_TYPE_OTHER = 0x8251;
        public const int DEBUG_TYPE_PERFORMANCE = 0x8250;
        public const int DEBUG_TYPE_POP_GROUP = 0x826A;
        public const int DEBUG_TYPE_PORTABILITY = 0x824F;
        public const int DEBUG_TYPE_PUSH_GROUP = 0x8269;
        public const int DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E;
        public const int DECAL = 0x2101;
        public const int DECR = 0x1E03;
        public const int DECR_WRAP = 0x8508;
        public const int DELETE_STATUS = 0x8B80;
        public const int DEPTH = 0x1801;
        public const int DEPTH24_STENCIL8 = 0x88F0;
        public const int DEPTH32F_STENCIL8 = 0x8CAD;
        public const int DEPTH_ATTACHMENT = 0x8D00;
        public const int DEPTH_BIAS = 0x0D1F;
        public const int DEPTH_BITS = 0x0D56;
        public const int DEPTH_CLAMP = 0x864F;
        public const int DEPTH_CLEAR_VALUE = 0x0B73;
        public const int DEPTH_COMPONENT = 0x1902;
        public const int DEPTH_COMPONENT16 = 0x81A5;
        public const int DEPTH_COMPONENT24 = 0x81A6;
        public const int DEPTH_COMPONENT32 = 0x81A7;
        public const int DEPTH_COMPONENT32F = 0x8CAC;
        public const int DEPTH_COMPONENTS = 0x8284;
        public const int DEPTH_FUNC = 0x0B74;
        public const int DEPTH_RANGE = 0x0B70;
        public const int DEPTH_RENDERABLE = 0x8287;
        public const int DEPTH_SCALE = 0x0D1E;
        public const int DEPTH_STENCIL = 0x84F9;
        public const int DEPTH_STENCIL_ATTACHMENT = 0x821A;
        public const int DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
        public const int DEPTH_TEST = 0x0B71;
        public const int DEPTH_TEXTURE_MODE = 0x884B;
        public const int DEPTH_WRITEMASK = 0x0B72;
        public const int DIFFUSE = 0x1201;
        public const int DISPATCH_INDIRECT_BUFFER = 0x90EE;
        public const int DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
        public const int DISPLAY_LIST = 0x82E7;
        public const int DITHER = 0x0BD0;
        public const int DOMAIN = 0x0A02;
        public const int DONT_CARE = 0x1100;
        public const int DOT3_RGB = 0x86AE;
        public const int DOT3_RGBA = 0x86AF;
        public const int DOUBLE = 0x140A;
        public const int DOUBLE_MAT2 = 0x8F46;
        public const int DOUBLE_MAT2x3 = 0x8F49;
        public const int DOUBLE_MAT2x4 = 0x8F4A;
        public const int DOUBLE_MAT3 = 0x8F47;
        public const int DOUBLE_MAT3x2 = 0x8F4B;
        public const int DOUBLE_MAT3x4 = 0x8F4C;
        public const int DOUBLE_MAT4 = 0x8F48;
        public const int DOUBLE_MAT4x2 = 0x8F4D;
        public const int DOUBLE_MAT4x3 = 0x8F4E;
        public const int DOUBLE_VEC2 = 0x8FFC;
        public const int DOUBLE_VEC3 = 0x8FFD;
        public const int DOUBLE_VEC4 = 0x8FFE;
        public const int DOUBLEBUFFER = 0x0C32;
        public const int DRAW_BUFFER = 0x0C01;
        public const int DRAW_BUFFER0 = 0x8825;
        public const int DRAW_BUFFER1 = 0x8826;
        public const int DRAW_BUFFER10 = 0x882F;
        public const int DRAW_BUFFER11 = 0x8830;
        public const int DRAW_BUFFER12 = 0x8831;
        public const int DRAW_BUFFER13 = 0x8832;
        public const int DRAW_BUFFER14 = 0x8833;
        public const int DRAW_BUFFER15 = 0x8834;
        public const int DRAW_BUFFER2 = 0x8827;
        public const int DRAW_BUFFER3 = 0x8828;
        public const int DRAW_BUFFER4 = 0x8829;
        public const int DRAW_BUFFER5 = 0x882A;
        public const int DRAW_BUFFER6 = 0x882B;
        public const int DRAW_BUFFER7 = 0x882C;
        public const int DRAW_BUFFER8 = 0x882D;
        public const int DRAW_BUFFER9 = 0x882E;
        public const int DRAW_FRAMEBUFFER = 0x8CA9;
        public const int DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
        public const int DRAW_INDIRECT_BUFFER = 0x8F3F;
        public const int DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
        public const int DRAW_PIXEL_TOKEN = 0x0705;
        public const int DST_ALPHA = 0x0304;
        public const int DST_COLOR = 0x0306;
        public const int DYNAMIC_COPY = 0x88EA;
        public const int DYNAMIC_DRAW = 0x88E8;
        public const int DYNAMIC_READ = 0x88E9;
        public const int EDGE_FLAG = 0x0B43;
        public const int EDGE_FLAG_ARRAY = 0x8079;
        public const int EDGE_FLAG_ARRAY_POINTER = 0x8093;
        public const int EDGE_FLAG_ARRAY_STRIDE = 0x808C;
        public const int ELEMENT_ARRAY_BUFFER = 0x8893;
        public const int EMISSION = 0x1600;
        public const int EQUAL = 0x0202;
        public const int EQUIV = 0x1509;
        public const int EXP = 0x0800;
        public const int EXP2 = 0x0801;
        public const int EXTENSIONS = 0x1F03;
        public const int EYE_LINEAR = 0x2400;
        public const int EYE_PLANE = 0x2502;
        public const int FALSE = 0;
        public const int FASTEST = 0x1101;
        public const int FEEDBACK = 0x1C01;
        public const int FEEDBACK_BUFFER_POINTER = 0x0DF0;
        public const int FEEDBACK_BUFFER_SIZE = 0x0DF1;
        public const int FEEDBACK_BUFFER_TYPE = 0x0DF2;
        public const int FILL = 0x1B02;
        public const int FILTER = 0x829A;
        public const int FIRST_VERTEX_CONVENTION = 0x8E4D;
        public const int FIXED = 0x140C;
        public const int FIXED_ONLY = 0x891D;
        public const int FLAT = 0x1D00;
        public const int FLOAT = 0x1406;
        public const int FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
        public const int FLOAT_MAT2 = 0x8B5A;
        public const int FLOAT_MAT2x3 = 0x8B65;
        public const int FLOAT_MAT2x4 = 0x8B66;
        public const int FLOAT_MAT3 = 0x8B5B;
        public const int FLOAT_MAT3x2 = 0x8B67;
        public const int FLOAT_MAT3x4 = 0x8B68;
        public const int FLOAT_MAT4 = 0x8B5C;
        public const int FLOAT_MAT4x2 = 0x8B69;
        public const int FLOAT_MAT4x3 = 0x8B6A;
        public const int FLOAT_VEC2 = 0x8B50;
        public const int FLOAT_VEC3 = 0x8B51;
        public const int FLOAT_VEC4 = 0x8B52;
        public const int FOG = 0x0B60;
        public const int FOG_COLOR = 0x0B66;
        public const int FOG_COORDINATE = 0x8451;
        public const int FOG_COORDINATE_ARRAY = 0x8457;
        public const int FOG_COORDINATE_ARRAY_POINTER = 0x8456;
        public const int FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
        public const int FOG_COORDINATE_ARRAY_TYPE = 0x8454;
        public const int FOG_COORDINATE_SOURCE = 0x8450;
        public const int FOG_DENSITY = 0x0B62;
        public const int FOG_END = 0x0B64;
        public const int FOG_HINT = 0x0C54;
        public const int FOG_INDEX = 0x0B61;
        public const int FOG_MODE = 0x0B65;
        public const int FOG_START = 0x0B63;
        public const int FRACTIONAL_EVEN = 0x8E7C;
        public const int FRACTIONAL_ODD = 0x8E7B;
        public const int FRAGMENT_DEPTH = 0x8452;
        public const int FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
        public const int FRAGMENT_SHADER = 0x8B30;
        public const int FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
        public const int FRAGMENT_SUBROUTINE = 0x92EC;
        public const int FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2;
        public const int FRAGMENT_TEXTURE = 0x829F;
        public const int FRAMEBUFFER = 0x8D40;
        public const int FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
        public const int FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
        public const int FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
        public const int FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
        public const int FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
        public const int FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
        public const int FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
        public const int FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
        public const int FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
        public const int FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
        public const int FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
        public const int FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
        public const int FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
        public const int FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
        public const int FRAMEBUFFER_BINDING = 0x8CA6;
        public const int FRAMEBUFFER_BLEND = 0x828B;
        public const int FRAMEBUFFER_COMPLETE = 0x8CD5;
        public const int FRAMEBUFFER_DEFAULT = 0x8218;
        public const int FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
        public const int FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
        public const int FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
        public const int FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
        public const int FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
        public const int FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
        public const int FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
        public const int FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
        public const int FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
        public const int FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
        public const int FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
        public const int FRAMEBUFFER_RENDERABLE = 0x8289;
        public const int FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A;
        public const int FRAMEBUFFER_SRGB = 0x8DB9;
        public const int FRAMEBUFFER_UNDEFINED = 0x8219;
        public const int FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
        public const int FRONT = 0x0404;
        public const int FRONT_AND_BACK = 0x0408;
        public const int FRONT_FACE = 0x0B46;
        public const int FRONT_LEFT = 0x0400;
        public const int FRONT_RIGHT = 0x0401;
        public const int FULL_SUPPORT = 0x82B7;
        public const int FUNC_ADD = 0x8006;
        public const int FUNC_REVERSE_SUBTRACT = 0x800B;
        public const int FUNC_SUBTRACT = 0x800A;
        public const int GENERATE_MIPMAP = 0x8191;
        public const int GENERATE_MIPMAP_HINT = 0x8192;
        public const int GEOMETRY_INPUT_TYPE = 0x8917;
        public const int GEOMETRY_OUTPUT_TYPE = 0x8918;
        public const int GEOMETRY_SHADER = 0x8DD9;
        public const int GEOMETRY_SHADER_INVOCATIONS = 0x887F;
        public const int GEOMETRY_SUBROUTINE = 0x92EB;
        public const int GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1;
        public const int GEOMETRY_TEXTURE = 0x829E;
        public const int GEOMETRY_VERTICES_OUT = 0x8916;
        public const int GEQUAL = 0x0206;
        public const int GET_TEXTURE_IMAGE_FORMAT = 0x8291;
        public const int GET_TEXTURE_IMAGE_TYPE = 0x8292;
        public const int GREATER = 0x0204;
        public const int GREEN = 0x1904;
        public const int GREEN_BIAS = 0x0D19;
        public const int GREEN_BITS = 0x0D53;
        public const int GREEN_INTEGER = 0x8D95;
        public const int GREEN_SCALE = 0x0D18;
        public const int HALF_FLOAT = 0x140B;
        public const int HIGH_FLOAT = 0x8DF2;
        public const int HIGH_INT = 0x8DF5;
        public const int HISTOGRAM = 0x8024;
        public const int HISTOGRAM_ALPHA_SIZE = 0x802B;
        public const int HISTOGRAM_BLUE_SIZE = 0x802A;
        public const int HISTOGRAM_FORMAT = 0x8027;
        public const int HISTOGRAM_GREEN_SIZE = 0x8029;
        public const int HISTOGRAM_LUMINANCE_SIZE = 0x802C;
        public const int HISTOGRAM_RED_SIZE = 0x8028;
        public const int HISTOGRAM_SINK = 0x802D;
        public const int HISTOGRAM_WIDTH = 0x8026;
        public const int IMAGE_1D = 0x904C;
        public const int IMAGE_1D_ARRAY = 0x9052;
        public const int IMAGE_2D = 0x904D;
        public const int IMAGE_2D_ARRAY = 0x9053;
        public const int IMAGE_2D_MULTISAMPLE = 0x9055;
        public const int IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
        public const int IMAGE_2D_RECT = 0x904F;
        public const int IMAGE_3D = 0x904E;
        public const int IMAGE_BINDING_ACCESS = 0x8F3E;
        public const int IMAGE_BINDING_FORMAT = 0x906E;
        public const int IMAGE_BINDING_LAYER = 0x8F3D;
        public const int IMAGE_BINDING_LAYERED = 0x8F3C;
        public const int IMAGE_BINDING_LEVEL = 0x8F3B;
        public const int IMAGE_BINDING_NAME = 0x8F3A;
        public const int IMAGE_BUFFER = 0x9051;
        public const int IMAGE_CLASS_10_10_10_2 = 0x82C3;
        public const int IMAGE_CLASS_11_11_10 = 0x82C2;
        public const int IMAGE_CLASS_1_X_16 = 0x82BE;
        public const int IMAGE_CLASS_1_X_32 = 0x82BB;
        public const int IMAGE_CLASS_1_X_8 = 0x82C1;
        public const int IMAGE_CLASS_2_X_16 = 0x82BD;
        public const int IMAGE_CLASS_2_X_32 = 0x82BA;
        public const int IMAGE_CLASS_2_X_8 = 0x82C0;
        public const int IMAGE_CLASS_4_X_16 = 0x82BC;
        public const int IMAGE_CLASS_4_X_32 = 0x82B9;
        public const int IMAGE_CLASS_4_X_8 = 0x82BF;
        public const int IMAGE_COMPATIBILITY_CLASS = 0x82A8;
        public const int IMAGE_CUBE = 0x9050;
        public const int IMAGE_CUBE_MAP_ARRAY = 0x9054;
        public const int IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
        public const int IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
        public const int IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
        public const int IMAGE_PIXEL_FORMAT = 0x82A9;
        public const int IMAGE_PIXEL_TYPE = 0x82AA;
        public const int IMAGE_TEXEL_SIZE = 0x82A7;
        public const int IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
        public const int IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
        public const int INCR = 0x1E02;
        public const int INCR_WRAP = 0x8507;
        public const int INDEX = 0x8222;
        public const int INDEX_ARRAY = 0x8077;
        public const int INDEX_ARRAY_POINTER = 0x8091;
        public const int INDEX_ARRAY_STRIDE = 0x8086;
        public const int INDEX_ARRAY_TYPE = 0x8085;
        public const int INDEX_BITS = 0x0D51;
        public const int INDEX_CLEAR_VALUE = 0x0C20;
        public const int INDEX_LOGIC_OP = 0x0BF1;
        public const int INDEX_MODE = 0x0C30;
        public const int INDEX_OFFSET = 0x0D13;
        public const int INDEX_SHIFT = 0x0D12;
        public const int INDEX_WRITEMASK = 0x0C21;
        public const int INFO_LOG_LENGTH = 0x8B84;
        public const int INT = 0x1404;
        public const int INT_2_10_10_10_REV = 0x8D9F;
        public const int INT_IMAGE_1D = 0x9057;
        public const int INT_IMAGE_1D_ARRAY = 0x905D;
        public const int INT_IMAGE_2D = 0x9058;
        public const int INT_IMAGE_2D_ARRAY = 0x905E;
        public const int INT_IMAGE_2D_MULTISAMPLE = 0x9060;
        public const int INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
        public const int INT_IMAGE_2D_RECT = 0x905A;
        public const int INT_IMAGE_3D = 0x9059;
        public const int INT_IMAGE_BUFFER = 0x905C;
        public const int INT_IMAGE_CUBE = 0x905B;
        public const int INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
        public const int INT_SAMPLER_1D = 0x8DC9;
        public const int INT_SAMPLER_1D_ARRAY = 0x8DCE;
        public const int INT_SAMPLER_2D = 0x8DCA;
        public const int INT_SAMPLER_2D_ARRAY = 0x8DCF;
        public const int INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
        public const int INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
        public const int INT_SAMPLER_2D_RECT = 0x8DCD;
        public const int INT_SAMPLER_3D = 0x8DCB;
        public const int INT_SAMPLER_BUFFER = 0x8DD0;
        public const int INT_SAMPLER_CUBE = 0x8DCC;
        public const int INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
        public const int INT_VEC2 = 0x8B53;
        public const int INT_VEC3 = 0x8B54;
        public const int INT_VEC4 = 0x8B55;
        public const int INTENSITY = 0x8049;
        public const int INTENSITY12 = 0x804C;
        public const int INTENSITY16 = 0x804D;
        public const int INTENSITY4 = 0x804A;
        public const int INTENSITY8 = 0x804B;
        public const int INTERLEAVED_ATTRIBS = 0x8C8C;
        public const int INTERNALFORMAT_ALPHA_SIZE = 0x8274;
        public const int INTERNALFORMAT_ALPHA_TYPE = 0x827B;
        public const int INTERNALFORMAT_BLUE_SIZE = 0x8273;
        public const int INTERNALFORMAT_BLUE_TYPE = 0x827A;
        public const int INTERNALFORMAT_DEPTH_SIZE = 0x8275;
        public const int INTERNALFORMAT_DEPTH_TYPE = 0x827C;
        public const int INTERNALFORMAT_GREEN_SIZE = 0x8272;
        public const int INTERNALFORMAT_GREEN_TYPE = 0x8279;
        public const int INTERNALFORMAT_PREFERRED = 0x8270;
        public const int INTERNALFORMAT_RED_SIZE = 0x8271;
        public const int INTERNALFORMAT_RED_TYPE = 0x8278;
        public const int INTERNALFORMAT_SHARED_SIZE = 0x8277;
        public const int INTERNALFORMAT_STENCIL_SIZE = 0x8276;
        public const int INTERNALFORMAT_STENCIL_TYPE = 0x827D;
        public const int INTERNALFORMAT_SUPPORTED = 0x826F;
        public const int INTERPOLATE = 0x8575;
        public const int INVALID_ENUM = 0x0500;
        public const int INVALID_FRAMEBUFFER_OPERATION = 0x0506;
        public const int INVALID_OPERATION = 0x0502;
        public const int INVALID_VALUE = 0x0501;
        public const int INVERT = 0x150A;
        public const int IS_PER_PATCH = 0x92E7;
        public const int IS_ROW_MAJOR = 0x9300;
        public const int ISOLINES = 0x8E7A;
        public const int KEEP = 0x1E00;
        public const int LAST_VERTEX_CONVENTION = 0x8E4E;
        public const int LAYER_PROVOKING_VERTEX = 0x825E;
        public const int LEFT = 0x0406;
        public const int LEQUAL = 0x0203;
        public const int LESS = 0x0201;
        public const int LIGHT0 = 0x4000;
        public const int LIGHT1 = 0x4001;
        public const int LIGHT2 = 0x4002;
        public const int LIGHT3 = 0x4003;
        public const int LIGHT4 = 0x4004;
        public const int LIGHT5 = 0x4005;
        public const int LIGHT6 = 0x4006;
        public const int LIGHT7 = 0x4007;
        public const int LIGHT_MODEL_AMBIENT = 0x0B53;
        public const int LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
        public const int LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
        public const int LIGHT_MODEL_TWO_SIDE = 0x0B52;
        public const int LIGHTING = 0x0B50;
        public const int LINE = 0x1B01;
        public const int LINE_LOOP = 0x0002;
        public const int LINE_RESET_TOKEN = 0x0707;
        public const int LINE_SMOOTH = 0x0B20;
        public const int LINE_SMOOTH_HINT = 0x0C52;
        public const int LINE_STIPPLE = 0x0B24;
        public const int LINE_STIPPLE_PATTERN = 0x0B25;
        public const int LINE_STIPPLE_REPEAT = 0x0B26;
        public const int LINE_STRIP = 0x0003;
        public const int LINE_STRIP_ADJACENCY = 0x000B;
        public const int LINE_TOKEN = 0x0702;
        public const int LINE_WIDTH = 0x0B21;
        public const int LINE_WIDTH_GRANULARITY = 0x0B23;
        public const int LINE_WIDTH_RANGE = 0x0B22;
        public const int LINEAR = 0x2601;
        public const int LINEAR_ATTENUATION = 0x1208;
        public const int LINEAR_MIPMAP_LINEAR = 0x2703;
        public const int LINEAR_MIPMAP_NEAREST = 0x2701;
        public const int LINES = 0x0001;
        public const int LINES_ADJACENCY = 0x000A;
        public const int LINK_STATUS = 0x8B82;
        public const int LIST_BASE = 0x0B32;
        public const int LIST_INDEX = 0x0B33;
        public const int LIST_MODE = 0x0B30;
        public const int LOAD = 0x0101;
        public const int LOCATION = 0x930E;
        public const int LOCATION_INDEX = 0x930F;
        public const int LOGIC_OP = 0x0BF1;
        public const int LOGIC_OP_MODE = 0x0BF0;
        public const int LOW_FLOAT = 0x8DF0;
        public const int LOW_INT = 0x8DF3;
        public const int LOWER_LEFT = 0x8CA1;
        public const int LUMINANCE = 0x1909;
        public const int LUMINANCE12 = 0x8041;
        public const int LUMINANCE12_ALPHA12 = 0x8047;
        public const int LUMINANCE12_ALPHA4 = 0x8046;
        public const int LUMINANCE16 = 0x8042;
        public const int LUMINANCE16_ALPHA16 = 0x8048;
        public const int LUMINANCE4 = 0x803F;
        public const int LUMINANCE4_ALPHA4 = 0x8043;
        public const int LUMINANCE6_ALPHA2 = 0x8044;
        public const int LUMINANCE8 = 0x8040;
        public const int LUMINANCE8_ALPHA8 = 0x8045;
        public const int LUMINANCE_ALPHA = 0x190A;
        public const int MAJOR_VERSION = 0x821B;
        public const int MANUAL_GENERATE_MIPMAP = 0x8294;
        public const int MAP1_COLOR_4 = 0x0D90;
        public const int MAP1_GRID_DOMAIN = 0x0DD0;
        public const int MAP1_GRID_SEGMENTS = 0x0DD1;
        public const int MAP1_INDEX = 0x0D91;
        public const int MAP1_NORMAL = 0x0D92;
        public const int MAP1_TEXTURE_COORD_1 = 0x0D93;
        public const int MAP1_TEXTURE_COORD_2 = 0x0D94;
        public const int MAP1_TEXTURE_COORD_3 = 0x0D95;
        public const int MAP1_TEXTURE_COORD_4 = 0x0D96;
        public const int MAP1_VERTEX_3 = 0x0D97;
        public const int MAP1_VERTEX_4 = 0x0D98;
        public const int MAP2_COLOR_4 = 0x0DB0;
        public const int MAP2_GRID_DOMAIN = 0x0DD2;
        public const int MAP2_GRID_SEGMENTS = 0x0DD3;
        public const int MAP2_INDEX = 0x0DB1;
        public const int MAP2_NORMAL = 0x0DB2;
        public const int MAP2_TEXTURE_COORD_1 = 0x0DB3;
        public const int MAP2_TEXTURE_COORD_2 = 0x0DB4;
        public const int MAP2_TEXTURE_COORD_3 = 0x0DB5;
        public const int MAP2_TEXTURE_COORD_4 = 0x0DB6;
        public const int MAP2_VERTEX_3 = 0x0DB7;
        public const int MAP2_VERTEX_4 = 0x0DB8;
        public const int MAP_COLOR = 0x0D10;
        public const int MAP_FLUSH_EXPLICIT_BIT = 0x0010;
        public const int MAP_INVALIDATE_BUFFER_BIT = 0x0008;
        public const int MAP_INVALIDATE_RANGE_BIT = 0x0004;
        public const int MAP_READ_BIT = 0x0001;
        public const int MAP_STENCIL = 0x0D11;
        public const int MAP_UNSYNCHRONIZED_BIT = 0x0020;
        public const int MAP_WRITE_BIT = 0x0002;
        public const int MATRIX_MODE = 0x0BA0;
        public const int MATRIX_STRIDE = 0x92FF;
        public const int MAX = 0x8008;
        public const int MAX_3D_TEXTURE_SIZE = 0x8073;
        public const int MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
        public const int MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
        public const int MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
        public const int MAX_ATTRIB_STACK_DEPTH = 0x0D35;
        public const int MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
        public const int MAX_CLIP_PLANES = 0x0D32;
        public const int MAX_COLOR_ATTACHMENTS = 0x8CDF;
        public const int MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3;
        public const int MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
        public const int MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
        public const int MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
        public const int MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
        public const int MAX_COMBINED_DIMENSIONS = 0x8282;
        public const int MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
        public const int MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
        public const int MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
        public const int MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
        public const int MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
        public const int MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
        public const int MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
        public const int MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
        public const int MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
        public const int MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
        public const int MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
        public const int MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
        public const int MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
        public const int MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
        public const int MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
        public const int MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
        public const int MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
        public const int MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
        public const int MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
        public const int MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB;
        public const int MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
        public const int MAX_CONVOLUTION_HEIGHT = 0x801B;
        public const int MAX_CONVOLUTION_WIDTH = 0x801A;
        public const int MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
        public const int MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C;
        public const int MAX_DEBUG_LOGGED_MESSAGES = 0x9144;
        public const int MAX_DEBUG_MESSAGE_LENGTH = 0x9143;
        public const int MAX_DEPTH = 0x8280;
        public const int MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
        public const int MAX_DRAW_BUFFERS = 0x8824;
        public const int MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
        public const int MAX_ELEMENT_INDEX = 0x8D6B;
        public const int MAX_ELEMENTS_INDICES = 0x80E9;
        public const int MAX_ELEMENTS_VERTICES = 0x80E8;
        public const int MAX_EVAL_ORDER = 0x0D30;
        public const int MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
        public const int MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
        public const int MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
        public const int MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
        public const int MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
        public const int MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
        public const int MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
        public const int MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
        public const int MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
        public const int MAX_FRAMEBUFFER_HEIGHT = 0x9316;
        public const int MAX_FRAMEBUFFER_LAYERS = 0x9317;
        public const int MAX_FRAMEBUFFER_SAMPLES = 0x9318;
        public const int MAX_FRAMEBUFFER_WIDTH = 0x9315;
        public const int MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
        public const int MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
        public const int MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
        public const int MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
        public const int MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
        public const int MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
        public const int MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;
        public const int MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7;
        public const int MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
        public const int MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
        public const int MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
        public const int MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
        public const int MAX_HEIGHT = 0x827F;
        public const int MAX_IMAGE_SAMPLES = 0x906D;
        public const int MAX_IMAGE_UNITS = 0x8F38;
        public const int MAX_INTEGER_SAMPLES = 0x9110;
        public const int MAX_LABEL_LENGTH = 0x82E8;
        public const int MAX_LAYERS = 0x8281;
        public const int MAX_LIGHTS = 0x0D31;
        public const int MAX_LIST_NESTING = 0x0B31;
        public const int MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
        public const int MAX_NAME_LENGTH = 0x92F6;
        public const int MAX_NAME_STACK_DEPTH = 0x0D37;
        public const int MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
        public const int MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8;
        public const int MAX_PATCH_VERTICES = 0x8E7D;
        public const int MAX_PIXEL_MAP_TABLE = 0x0D34;
        public const int MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
        public const int MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
        public const int MAX_PROJECTION_STACK_DEPTH = 0x0D38;
        public const int MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
        public const int MAX_RENDERBUFFER_SIZE = 0x84E8;
        public const int MAX_SAMPLE_MASK_WORDS = 0x8E59;
        public const int MAX_SAMPLES = 0x8D57;
        public const int MAX_SERVER_WAIT_TIMEOUT = 0x9111;
        public const int MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
        public const int MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
        public const int MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
        public const int MAX_SUBROUTINES = 0x8DE7;
        public const int MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
        public const int MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
        public const int MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
        public const int MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
        public const int MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
        public const int MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8;
        public const int MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
        public const int MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
        public const int MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
        public const int MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
        public const int MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
        public const int MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
        public const int MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
        public const int MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
        public const int MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
        public const int MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9;
        public const int MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
        public const int MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
        public const int MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
        public const int MAX_TESS_GEN_LEVEL = 0x8E7E;
        public const int MAX_TESS_PATCH_COMPONENTS = 0x8E84;
        public const int MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
        public const int MAX_TEXTURE_COORDS = 0x8871;
        public const int MAX_TEXTURE_IMAGE_UNITS = 0x8872;
        public const int MAX_TEXTURE_LOD_BIAS = 0x84FD;
        public const int MAX_TEXTURE_SIZE = 0x0D33;
        public const int MAX_TEXTURE_STACK_DEPTH = 0x0D39;
        public const int MAX_TEXTURE_UNITS = 0x84E2;
        public const int MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
        public const int MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
        public const int MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
        public const int MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
        public const int MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
        public const int MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
        public const int MAX_UNIFORM_LOCATIONS = 0x826E;
        public const int MAX_VARYING_COMPONENTS = 0x8B4B;
        public const int MAX_VARYING_FLOATS = 0x8B4B;
        public const int MAX_VARYING_VECTORS = 0x8DFC;
        public const int MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
        public const int MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
        public const int MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
        public const int MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
        public const int MAX_VERTEX_ATTRIBS = 0x8869;
        public const int MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
        public const int MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
        public const int MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
        public const int MAX_VERTEX_STREAMS = 0x8E71;
        public const int MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
        public const int MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
        public const int MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
        public const int MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
        public const int MAX_VIEWPORT_DIMS = 0x0D3A;
        public const int MAX_VIEWPORTS = 0x825B;
        public const int MAX_WIDTH = 0x827E;
        public const int MEDIUM_FLOAT = 0x8DF1;
        public const int MEDIUM_INT = 0x8DF4;
        public const int MIN = 0x8007;
        public const int MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
        public const int MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
        public const int MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
        public const int MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
        public const int MIN_SAMPLE_SHADING_VALUE = 0x8C37;
        public const int MINMAX = 0x802E;
        public const int MINMAX_FORMAT = 0x802F;
        public const int MINMAX_SINK = 0x8030;
        public const int MINOR_VERSION = 0x821C;
        public const int MIPMAP = 0x8293;
        public const int MIRRORED_REPEAT = 0x8370;
        public const int MODELVIEW = 0x1700;
        public const int MODELVIEW_MATRIX = 0x0BA6;
        public const int MODELVIEW_STACK_DEPTH = 0x0BA3;
        public const int MODULATE = 0x2100;
        public const int MULT = 0x0103;
        public const int MULTISAMPLE = 0x809D;
        public const int N3F_V3F = 0x2A25;
        public const int NAME_LENGTH = 0x92F9;
        public const int NAME_STACK_DEPTH = 0x0D70;
        public const int NAND = 0x150E;
        public const int NEAREST = 0x2600;
        public const int NEAREST_MIPMAP_LINEAR = 0x2702;
        public const int NEAREST_MIPMAP_NEAREST = 0x2700;
        public const int NEVER = 0x0200;
        public const int NICEST = 0x1102;
        public const int NO_ERROR = 0;
        public const int NONE = 0;
        public const int NOOP = 0x1505;
        public const int NOR = 0x1508;
        public const int NORMAL_ARRAY = 0x8075;
        public const int NORMAL_ARRAY_POINTER = 0x808F;
        public const int NORMAL_ARRAY_STRIDE = 0x807F;
        public const int NORMAL_ARRAY_TYPE = 0x807E;
        public const int NORMAL_MAP = 0x8511;
        public const int NORMALIZE = 0x0BA1;
        public const int NOTEQUAL = 0x0205;
        public const int NUM_ACTIVE_VARIABLES = 0x9304;
        public const int NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
        public const int NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
        public const int NUM_EXTENSIONS = 0x821D;
        public const int NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
        public const int NUM_SAMPLE_COUNTS = 0x9380;
        public const int NUM_SHADER_BINARY_FORMATS = 0x8DF9;
        public const int NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
        public const int OBJECT_LINEAR = 0x2401;
        public const int OBJECT_PLANE = 0x2501;
        public const int OBJECT_TYPE = 0x9112;
        public const int OFFSET = 0x92FC;
        public const int ONE = 1;
        public const int ONE_MINUS_CONSTANT_ALPHA = 0x8004;
        public const int ONE_MINUS_CONSTANT_COLOR = 0x8002;
        public const int ONE_MINUS_DST_ALPHA = 0x0305;
        public const int ONE_MINUS_DST_COLOR = 0x0307;
        public const int ONE_MINUS_SRC1_ALPHA = 0x88FB;
        public const int ONE_MINUS_SRC1_COLOR = 0x88FA;
        public const int ONE_MINUS_SRC_ALPHA = 0x0303;
        public const int ONE_MINUS_SRC_COLOR = 0x0301;
        public const int OPERAND0_ALPHA = 0x8598;
        public const int OPERAND0_RGB = 0x8590;
        public const int OPERAND1_ALPHA = 0x8599;
        public const int OPERAND1_RGB = 0x8591;
        public const int OPERAND2_ALPHA = 0x859A;
        public const int OPERAND2_RGB = 0x8592;
        public const int OR = 0x1507;
        public const int OR_INVERTED = 0x150D;
        public const int OR_REVERSE = 0x150B;
        public const int ORDER = 0x0A01;
        public const int OUT_OF_MEMORY = 0x0505;
        public const int PACK_ALIGNMENT = 0x0D05;
        public const int PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
        public const int PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
        public const int PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
        public const int PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
        public const int PACK_IMAGE_HEIGHT = 0x806C;
        public const int PACK_LSB_FIRST = 0x0D01;
        public const int PACK_ROW_LENGTH = 0x0D02;
        public const int PACK_SKIP_IMAGES = 0x806B;
        public const int PACK_SKIP_PIXELS = 0x0D04;
        public const int PACK_SKIP_ROWS = 0x0D03;
        public const int PACK_SWAP_BYTES = 0x0D00;
        public const int PASS_THROUGH_TOKEN = 0x0700;
        public const int PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
        public const int PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
        public const int PATCH_VERTICES = 0x8E72;
        public const int PATCHES = 0x000E;
        public const int PERSPECTIVE_CORRECTION_HINT = 0x0C50;
        public const int PIXEL_MAP_A_TO_A = 0x0C79;
        public const int PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
        public const int PIXEL_MAP_B_TO_B = 0x0C78;
        public const int PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
        public const int PIXEL_MAP_G_TO_G = 0x0C77;
        public const int PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
        public const int PIXEL_MAP_I_TO_A = 0x0C75;
        public const int PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
        public const int PIXEL_MAP_I_TO_B = 0x0C74;
        public const int PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
        public const int PIXEL_MAP_I_TO_G = 0x0C73;
        public const int PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
        public const int PIXEL_MAP_I_TO_I = 0x0C70;
        public const int PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
        public const int PIXEL_MAP_I_TO_R = 0x0C72;
        public const int PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
        public const int PIXEL_MAP_R_TO_R = 0x0C76;
        public const int PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
        public const int PIXEL_MAP_S_TO_S = 0x0C71;
        public const int PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
        public const int PIXEL_PACK_BUFFER = 0x88EB;
        public const int PIXEL_PACK_BUFFER_BINDING = 0x88ED;
        public const int PIXEL_UNPACK_BUFFER = 0x88EC;
        public const int PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
        public const int POINT = 0x1B00;
        public const int POINT_DISTANCE_ATTENUATION = 0x8129;
        public const int POINT_FADE_THRESHOLD_SIZE = 0x8128;
        public const int POINT_SIZE = 0x0B11;
        public const int POINT_SIZE_GRANULARITY = 0x0B13;
        public const int POINT_SIZE_MAX = 0x8127;
        public const int POINT_SIZE_MIN = 0x8126;
        public const int POINT_SIZE_RANGE = 0x0B12;
        public const int POINT_SMOOTH = 0x0B10;
        public const int POINT_SMOOTH_HINT = 0x0C51;
        public const int POINT_SPRITE = 0x8861;
        public const int POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
        public const int POINT_TOKEN = 0x0701;
        public const int POINTS = 0x0000;
        public const int POLYGON = 0x0009;
        public const int POLYGON_MODE = 0x0B40;
        public const int POLYGON_OFFSET_FACTOR = 0x8038;
        public const int POLYGON_OFFSET_FILL = 0x8037;
        public const int POLYGON_OFFSET_LINE = 0x2A02;
        public const int POLYGON_OFFSET_POINT = 0x2A01;
        public const int POLYGON_OFFSET_UNITS = 0x2A00;
        public const int POLYGON_SMOOTH = 0x0B41;
        public const int POLYGON_SMOOTH_HINT = 0x0C53;
        public const int POLYGON_STIPPLE = 0x0B42;
        public const int POLYGON_TOKEN = 0x0703;
        public const int POSITION = 0x1203;
        public const int POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB;
        public const int POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7;
        public const int POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA;
        public const int POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6;
        public const int POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
        public const int POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9;
        public const int POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5;
        public const int POST_COLOR_MATRIX_RED_BIAS = 0x80B8;
        public const int POST_COLOR_MATRIX_RED_SCALE = 0x80B4;
        public const int POST_CONVOLUTION_ALPHA_BIAS = 0x8023;
        public const int POST_CONVOLUTION_ALPHA_SCALE = 0x801F;
        public const int POST_CONVOLUTION_BLUE_BIAS = 0x8022;
        public const int POST_CONVOLUTION_BLUE_SCALE = 0x801E;
        public const int POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
        public const int POST_CONVOLUTION_GREEN_BIAS = 0x8021;
        public const int POST_CONVOLUTION_GREEN_SCALE = 0x801D;
        public const int POST_CONVOLUTION_RED_BIAS = 0x8020;
        public const int POST_CONVOLUTION_RED_SCALE = 0x801C;
        public const int PREVIOUS = 0x8578;
        public const int PRIMARY_COLOR = 0x8577;
        public const int PRIMITIVE_RESTART = 0x8F9D;
        public const int PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69;
        public const int PRIMITIVE_RESTART_INDEX = 0x8F9E;
        public const int PRIMITIVES_GENERATED = 0x8C87;
        public const int PROGRAM = 0x82E2;
        public const int PROGRAM_BINARY_FORMATS = 0x87FF;
        public const int PROGRAM_BINARY_LENGTH = 0x8741;
        public const int PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
        public const int PROGRAM_INPUT = 0x92E3;
        public const int PROGRAM_OUTPUT = 0x92E4;
        public const int PROGRAM_PIPELINE = 0x82E4;
        public const int PROGRAM_PIPELINE_BINDING = 0x825A;
        public const int PROGRAM_SEPARABLE = 0x8258;
        public const int PROJECTION = 0x1701;
        public const int PROJECTION_MATRIX = 0x0BA7;
        public const int PROJECTION_STACK_DEPTH = 0x0BA4;
        public const int PROVOKING_VERTEX = 0x8E4F;
        public const int PROXY_COLOR_TABLE = 0x80D3;
        public const int PROXY_HISTOGRAM = 0x8025;
        public const int PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
        public const int PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
        public const int PROXY_TEXTURE_1D = 0x8063;
        public const int PROXY_TEXTURE_1D_ARRAY = 0x8C19;
        public const int PROXY_TEXTURE_2D = 0x8064;
        public const int PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
        public const int PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
        public const int PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
        public const int PROXY_TEXTURE_3D = 0x8070;
        public const int PROXY_TEXTURE_CUBE_MAP = 0x851B;
        public const int PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
        public const int PROXY_TEXTURE_RECTANGLE = 0x84F7;
        public const int Q = 0x2003;
        public const int QUAD_STRIP = 0x0008;
        public const int QUADRATIC_ATTENUATION = 0x1209;
        public const int QUADS = 0x0007;
        public const int QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
        public const int QUERY = 0x82E3;
        public const int QUERY_BUFFER = 0x9192;
        public const int QUERY_BY_REGION_NO_WAIT = 0x8E16;
        public const int QUERY_BY_REGION_WAIT = 0x8E15;
        public const int QUERY_NO_WAIT = 0x8E14;
        public const int QUERY_WAIT = 0x8E13;
        public const int R = 0x2002;
        public const int R11F_G11F_B10F = 0x8C3A;
        public const int R16 = 0x822A;
        public const int R16_SNORM = 0x8F98;
        public const int R16F = 0x822D;
        public const int R16I = 0x8233;
        public const int R16UI = 0x8234;
        public const int R32F = 0x822E;
        public const int R32I = 0x8235;
        public const int R32UI = 0x8236;
        public const int R3_G3_B2 = 0x2A10;
        public const int R8 = 0x8229;
        public const int R8_SNORM = 0x8F94;
        public const int R8I = 0x8231;
        public const int R8UI = 0x8232;
        public const int RASTERIZER_DISCARD = 0x8C89;
        public const int READ_BUFFER = 0x0C02;
        public const int READ_FRAMEBUFFER = 0x8CA8;
        public const int READ_FRAMEBUFFER_BINDING = 0x8CAA;
        public const int READ_PIXELS = 0x828C;
        public const int READ_PIXELS_FORMAT = 0x828D;
        public const int READ_PIXELS_TYPE = 0x828E;
        public const int RED = 0x1903;
        public const int RED_BIAS = 0x0D15;
        public const int RED_BITS = 0x0D52;
        public const int RED_INTEGER = 0x8D94;
        public const int RED_SCALE = 0x0D14;
        public const int REDUCE = 0x8016;
        public const int REFERENCED_BY_COMPUTE_SHADER = 0x930B;
        public const int REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
        public const int REFERENCED_BY_GEOMETRY_SHADER = 0x9309;
        public const int REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307;
        public const int REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308;
        public const int REFERENCED_BY_VERTEX_SHADER = 0x9306;
        public const int REFLECTION_MAP = 0x8512;
        public const int RENDER = 0x1C00;
        public const int RENDER_MODE = 0x0C40;
        public const int RENDERBUFFER = 0x8D41;
        public const int RENDERBUFFER_ALPHA_SIZE = 0x8D53;
        public const int RENDERBUFFER_BINDING = 0x8CA7;
        public const int RENDERBUFFER_BLUE_SIZE = 0x8D52;
        public const int RENDERBUFFER_DEPTH_SIZE = 0x8D54;
        public const int RENDERBUFFER_GREEN_SIZE = 0x8D51;
        public const int RENDERBUFFER_HEIGHT = 0x8D43;
        public const int RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;
        public const int RENDERBUFFER_RED_SIZE = 0x8D50;
        public const int RENDERBUFFER_SAMPLES = 0x8CAB;
        public const int RENDERBUFFER_STENCIL_SIZE = 0x8D55;
        public const int RENDERBUFFER_WIDTH = 0x8D42;
        public const int RENDERER = 0x1F01;
        public const int REPEAT = 0x2901;
        public const int REPLACE = 0x1E01;
        public const int REPLICATE_BORDER = 0x8153;
        public const int RESCALE_NORMAL = 0x803A;
        public const int RETURN = 0x0102;
        public const int RG = 0x8227;
        public const int RG16 = 0x822C;
        public const int RG16_SNORM = 0x8F99;
        public const int RG16F = 0x822F;
        public const int RG16I = 0x8239;
        public const int RG16UI = 0x823A;
        public const int RG32F = 0x8230;
        public const int RG32I = 0x823B;
        public const int RG32UI = 0x823C;
        public const int RG8 = 0x822B;
        public const int RG8_SNORM = 0x8F95;
        public const int RG8I = 0x8237;
        public const int RG8UI = 0x8238;
        public const int RG_INTEGER = 0x8228;
        public const int RGB = 0x1907;
        public const int RGB10 = 0x8052;
        public const int RGB10_A2 = 0x8059;
        public const int RGB10_A2UI = 0x906F;
        public const int RGB12 = 0x8053;
        public const int RGB16 = 0x8054;
        public const int RGB16_SNORM = 0x8F9A;
        public const int RGB16F = 0x881B;
        public const int RGB16I = 0x8D89;
        public const int RGB16UI = 0x8D77;
        public const int RGB32F = 0x8815;
        public const int RGB32I = 0x8D83;
        public const int RGB32UI = 0x8D71;
        public const int RGB4 = 0x804F;
        public const int RGB5 = 0x8050;
        public const int RGB565 = 0x8D62;
        public const int RGB5_A1 = 0x8057;
        public const int RGB8 = 0x8051;
        public const int RGB8_SNORM = 0x8F96;
        public const int RGB8I = 0x8D8F;
        public const int RGB8UI = 0x8D7D;
        public const int RGB9_E5 = 0x8C3D;
        public const int RGB_INTEGER = 0x8D98;
        public const int RGB_SCALE = 0x8573;
        public const int RGBA = 0x1908;
        public const int RGBA12 = 0x805A;
        public const int RGBA16 = 0x805B;
        public const int RGBA16_SNORM = 0x8F9B;
        public const int RGBA16F = 0x881A;
        public const int RGBA16I = 0x8D88;
        public const int RGBA16UI = 0x8D76;
        public const int RGBA2 = 0x8055;
        public const int RGBA32F = 0x8814;
        public const int RGBA32I = 0x8D82;
        public const int RGBA32UI = 0x8D70;
        public const int RGBA4 = 0x8056;
        public const int RGBA8 = 0x8058;
        public const int RGBA8_SNORM = 0x8F97;
        public const int RGBA8I = 0x8D8E;
        public const int RGBA8UI = 0x8D7C;
        public const int RGBA_INTEGER = 0x8D99;
        public const int RGBA_MODE = 0x0C31;
        public const int RIGHT = 0x0407;
        public const int S = 0x2000;
        public const int SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
        public const int SAMPLE_ALPHA_TO_ONE = 0x809F;
        public const int SAMPLE_BUFFERS = 0x80A8;
        public const int SAMPLE_COVERAGE = 0x80A0;
        public const int SAMPLE_COVERAGE_INVERT = 0x80AB;
        public const int SAMPLE_COVERAGE_VALUE = 0x80AA;
        public const int SAMPLE_MASK = 0x8E51;
        public const int SAMPLE_MASK_VALUE = 0x8E52;
        public const int SAMPLE_POSITION = 0x8E50;
        public const int SAMPLE_SHADING = 0x8C36;
        public const int SAMPLER = 0x82E6;
        public const int SAMPLER_1D = 0x8B5D;
        public const int SAMPLER_1D_ARRAY = 0x8DC0;
        public const int SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
        public const int SAMPLER_1D_SHADOW = 0x8B61;
        public const int SAMPLER_2D = 0x8B5E;
        public const int SAMPLER_2D_ARRAY = 0x8DC1;
        public const int SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
        public const int SAMPLER_2D_MULTISAMPLE = 0x9108;
        public const int SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
        public const int SAMPLER_2D_RECT = 0x8B63;
        public const int SAMPLER_2D_RECT_SHADOW = 0x8B64;
        public const int SAMPLER_2D_SHADOW = 0x8B62;
        public const int SAMPLER_3D = 0x8B5F;
        public const int SAMPLER_BINDING = 0x8919;
        public const int SAMPLER_BUFFER = 0x8DC2;
        public const int SAMPLER_CUBE = 0x8B60;
        public const int SAMPLER_CUBE_MAP_ARRAY = 0x900C;
        public const int SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
        public const int SAMPLER_CUBE_SHADOW = 0x8DC5;
        public const int SAMPLES = 0x80A9;
        public const int SCISSOR_BOX = 0x0C10;
        public const int SCISSOR_TEST = 0x0C11;
        public const int SECONDARY_COLOR_ARRAY = 0x845E;
        public const int SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
        public const int SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
        public const int SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
        public const int SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
        public const int SELECT = 0x1C02;
        public const int SELECTION_BUFFER_POINTER = 0x0DF3;
        public const int SELECTION_BUFFER_SIZE = 0x0DF4;
        public const int SEPARABLE_2D = 0x8012;
        public const int SEPARATE_ATTRIBS = 0x8C8D;
        public const int SEPARATE_SPECULAR_COLOR = 0x81FA;
        public const int SET = 0x150F;
        public const int SHADE_MODEL = 0x0B54;
        public const int SHADER = 0x82E1;
        public const int SHADER_BINARY_FORMATS = 0x8DF8;
        public const int SHADER_COMPILER = 0x8DFA;
        public const int SHADER_IMAGE_ATOMIC = 0x82A6;
        public const int SHADER_IMAGE_LOAD = 0x82A4;
        public const int SHADER_IMAGE_STORE = 0x82A5;
        public const int SHADER_SOURCE_LENGTH = 0x8B88;
        public const int SHADER_STORAGE_BLOCK = 0x92E6;
        public const int SHADER_STORAGE_BUFFER = 0x90D2;
        public const int SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
        public const int SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
        public const int SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
        public const int SHADER_STORAGE_BUFFER_START = 0x90D4;
        public const int SHADER_TYPE = 0x8B4F;
        public const int SHADING_LANGUAGE_VERSION = 0x8B8C;
        public const int SHININESS = 0x1601;
        public const int SHORT = 0x1402;
        public const int SIGNALED = 0x9119;
        public const int SIGNED_NORMALIZED = 0x8F9C;
        public const int SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC;
        public const int SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE;
        public const int SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD;
        public const int SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF;
        public const int SINGLE_COLOR = 0x81F9;
        public const int SLUMINANCE = 0x8C46;
        public const int SLUMINANCE8 = 0x8C47;
        public const int SLUMINANCE8_ALPHA8 = 0x8C45;
        public const int SLUMINANCE_ALPHA = 0x8C44;
        public const int SMOOTH = 0x1D01;
        public const int SOURCE0_ALPHA = 0x8588;
        public const int SOURCE0_RGB = 0x8580;
        public const int SOURCE1_ALPHA = 0x8589;
        public const int SOURCE1_RGB = 0x8581;
        public const int SOURCE2_ALPHA = 0x858A;
        public const int SOURCE2_RGB = 0x8582;
        public const int SPECULAR = 0x1202;
        public const int SPHERE_MAP = 0x2402;
        public const int SPOT_CUTOFF = 0x1206;
        public const int SPOT_DIRECTION = 0x1204;
        public const int SPOT_EXPONENT = 0x1205;
        public const int SRC1_COLOR = 0x88F9;
        public const int SRC_ALPHA = 0x0302;
        public const int SRC_ALPHA_SATURATE = 0x0308;
        public const int SRC_COLOR = 0x0300;
        public const int SRGB = 0x8C40;
        public const int SRGB8 = 0x8C41;
        public const int SRGB8_ALPHA8 = 0x8C43;
        public const int SRGB_ALPHA = 0x8C42;
        public const int SRGB_READ = 0x8297;
        public const int SRGB_WRITE = 0x8298;
        public const int STACK_OVERFLOW = 0x0503;
        public const int STACK_UNDERFLOW = 0x0504;
        public const int STATIC_COPY = 0x88E6;
        public const int STATIC_DRAW = 0x88E4;
        public const int STATIC_READ = 0x88E5;
        public const int STENCIL = 0x1802;
        public const int STENCIL_ATTACHMENT = 0x8D20;
        public const int STENCIL_BACK_FAIL = 0x8801;
        public const int STENCIL_BACK_FUNC = 0x8800;
        public const int STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
        public const int STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
        public const int STENCIL_BACK_REF = 0x8CA3;
        public const int STENCIL_BACK_VALUE_MASK = 0x8CA4;
        public const int STENCIL_BACK_WRITEMASK = 0x8CA5;
        public const int STENCIL_BITS = 0x0D57;
        public const int STENCIL_CLEAR_VALUE = 0x0B91;
        public const int STENCIL_COMPONENTS = 0x8285;
        public const int STENCIL_FAIL = 0x0B94;
        public const int STENCIL_FUNC = 0x0B92;
        public const int STENCIL_INDEX = 0x1901;
        public const int STENCIL_INDEX1 = 0x8D46;
        public const int STENCIL_INDEX16 = 0x8D49;
        public const int STENCIL_INDEX4 = 0x8D47;
        public const int STENCIL_INDEX8 = 0x8D48;
        public const int STENCIL_PASS_DEPTH_FAIL = 0x0B95;
        public const int STENCIL_PASS_DEPTH_PASS = 0x0B96;
        public const int STENCIL_REF = 0x0B97;
        public const int STENCIL_RENDERABLE = 0x8288;
        public const int STENCIL_TEST = 0x0B90;
        public const int STENCIL_VALUE_MASK = 0x0B93;
        public const int STENCIL_WRITEMASK = 0x0B98;
        public const int STEREO = 0x0C33;
        public const int STREAM_COPY = 0x88E2;
        public const int STREAM_DRAW = 0x88E0;
        public const int STREAM_READ = 0x88E1;
        public const int SUBPIXEL_BITS = 0x0D50;
        public const int SUBTRACT = 0x84E7;
        public const int SYNC_CONDITION = 0x9113;
        public const int SYNC_FENCE = 0x9116;
        public const int SYNC_FLAGS = 0x9115;
        public const int SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
        public const int SYNC_STATUS = 0x9114;
        public const int T = 0x2001;
        public const int T2F_C3F_V3F = 0x2A2A;
        public const int T2F_C4F_N3F_V3F = 0x2A2C;
        public const int T2F_C4UB_V3F = 0x2A29;
        public const int T2F_N3F_V3F = 0x2A2B;
        public const int T2F_V3F = 0x2A27;
        public const int T4F_C4F_N3F_V4F = 0x2A2D;
        public const int T4F_V4F = 0x2A28;
        public const int TABLE_TOO_LARGE = 0x8031;
        public const int TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
        public const int TESS_CONTROL_SHADER = 0x8E88;
        public const int TESS_CONTROL_SUBROUTINE = 0x92E9;
        public const int TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF;
        public const int TESS_CONTROL_TEXTURE = 0x829C;
        public const int TESS_EVALUATION_SHADER = 0x8E87;
        public const int TESS_EVALUATION_SUBROUTINE = 0x92EA;
        public const int TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0;
        public const int TESS_EVALUATION_TEXTURE = 0x829D;
        public const int TESS_GEN_MODE = 0x8E76;
        public const int TESS_GEN_POINT_MODE = 0x8E79;
        public const int TESS_GEN_SPACING = 0x8E77;
        public const int TESS_GEN_VERTEX_ORDER = 0x8E78;
        public const int TEXTURE = 0x1702;
        public const int TEXTURE0 = 0x84C0;
        public const int TEXTURE1 = 0x84C1;
        public const int TEXTURE10 = 0x84CA;
        public const int TEXTURE11 = 0x84CB;
        public const int TEXTURE12 = 0x84CC;
        public const int TEXTURE13 = 0x84CD;
        public const int TEXTURE14 = 0x84CE;
        public const int TEXTURE15 = 0x84CF;
        public const int TEXTURE16 = 0x84D0;
        public const int TEXTURE17 = 0x84D1;
        public const int TEXTURE18 = 0x84D2;
        public const int TEXTURE19 = 0x84D3;
        public const int TEXTURE2 = 0x84C2;
        public const int TEXTURE20 = 0x84D4;
        public const int TEXTURE21 = 0x84D5;
        public const int TEXTURE22 = 0x84D6;
        public const int TEXTURE23 = 0x84D7;
        public const int TEXTURE24 = 0x84D8;
        public const int TEXTURE25 = 0x84D9;
        public const int TEXTURE26 = 0x84DA;
        public const int TEXTURE27 = 0x84DB;
        public const int TEXTURE28 = 0x84DC;
        public const int TEXTURE29 = 0x84DD;
        public const int TEXTURE3 = 0x84C3;
        public const int TEXTURE30 = 0x84DE;
        public const int TEXTURE31 = 0x84DF;
        public const int TEXTURE4 = 0x84C4;
        public const int TEXTURE5 = 0x84C5;
        public const int TEXTURE6 = 0x84C6;
        public const int TEXTURE7 = 0x84C7;
        public const int TEXTURE8 = 0x84C8;
        public const int TEXTURE9 = 0x84C9;
        public const int TEXTURE_1D = 0x0DE0;
        public const int TEXTURE_1D_ARRAY = 0x8C18;
        public const int TEXTURE_2D = 0x0DE1;
        public const int TEXTURE_2D_ARRAY = 0x8C1A;
        public const int TEXTURE_2D_MULTISAMPLE = 0x9100;
        public const int TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
        public const int TEXTURE_3D = 0x806F;
        public const int TEXTURE_ALPHA_SIZE = 0x805F;
        public const int TEXTURE_ALPHA_TYPE = 0x8C13;
        public const int TEXTURE_BASE_LEVEL = 0x813C;
        public const int TEXTURE_BINDING_1D = 0x8068;
        public const int TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
        public const int TEXTURE_BINDING_2D = 0x8069;
        public const int TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
        public const int TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
        public const int TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
        public const int TEXTURE_BINDING_3D = 0x806A;
        public const int TEXTURE_BINDING_BUFFER = 0x8C2C;
        public const int TEXTURE_BINDING_CUBE_MAP = 0x8514;
        public const int TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
        public const int TEXTURE_BINDING_RECTANGLE = 0x84F6;
        public const int TEXTURE_BLUE_SIZE = 0x805E;
        public const int TEXTURE_BLUE_TYPE = 0x8C12;
        public const int TEXTURE_BORDER = 0x1005;
        public const int TEXTURE_BORDER_COLOR = 0x1004;
        public const int TEXTURE_BUFFER = 0x8C2A;
        public const int TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
        public const int TEXTURE_BUFFER_OFFSET = 0x919D;
        public const int TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
        public const int TEXTURE_BUFFER_SIZE = 0x919E;
        public const int TEXTURE_COMPARE_FUNC = 0x884D;
        public const int TEXTURE_COMPARE_MODE = 0x884C;
        public const int TEXTURE_COMPONENTS = 0x1003;
        public const int TEXTURE_COMPRESSED = 0x86A1;
        public const int TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2;
        public const int TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3;
        public const int TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1;
        public const int TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
        public const int TEXTURE_COMPRESSION_HINT = 0x84EF;
        public const int TEXTURE_COORD_ARRAY = 0x8078;
        public const int TEXTURE_COORD_ARRAY_POINTER = 0x8092;
        public const int TEXTURE_COORD_ARRAY_SIZE = 0x8088;
        public const int TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
        public const int TEXTURE_COORD_ARRAY_TYPE = 0x8089;
        public const int TEXTURE_CUBE_MAP = 0x8513;
        public const int TEXTURE_CUBE_MAP_ARRAY = 0x9009;
        public const int TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
        public const int TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
        public const int TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
        public const int TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
        public const int TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
        public const int TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
        public const int TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
        public const int TEXTURE_DEPTH = 0x8071;
        public const int TEXTURE_DEPTH_SIZE = 0x884A;
        public const int TEXTURE_DEPTH_TYPE = 0x8C16;
        public const int TEXTURE_ENV = 0x2300;
        public const int TEXTURE_ENV_COLOR = 0x2201;
        public const int TEXTURE_ENV_MODE = 0x2200;
        public const int TEXTURE_FILTER_CONTROL = 0x8500;
        public const int TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
        public const int TEXTURE_GATHER = 0x82A2;
        public const int TEXTURE_GATHER_SHADOW = 0x82A3;
        public const int TEXTURE_GEN_MODE = 0x2500;
        public const int TEXTURE_GEN_Q = 0x0C63;
        public const int TEXTURE_GEN_R = 0x0C62;
        public const int TEXTURE_GEN_S = 0x0C60;
        public const int TEXTURE_GEN_T = 0x0C61;
        public const int TEXTURE_GREEN_SIZE = 0x805D;
        public const int TEXTURE_GREEN_TYPE = 0x8C11;
        public const int TEXTURE_HEIGHT = 0x1001;
        public const int TEXTURE_IMAGE_FORMAT = 0x828F;
        public const int TEXTURE_IMAGE_TYPE = 0x8290;
        public const int TEXTURE_IMMUTABLE_FORMAT = 0x912F;
        public const int TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
        public const int TEXTURE_INTENSITY_SIZE = 0x8061;
        public const int TEXTURE_INTENSITY_TYPE = 0x8C15;
        public const int TEXTURE_INTERNAL_FORMAT = 0x1003;
        public const int TEXTURE_LOD_BIAS = 0x8501;
        public const int TEXTURE_LUMINANCE_SIZE = 0x8060;
        public const int TEXTURE_LUMINANCE_TYPE = 0x8C14;
        public const int TEXTURE_MAG_FILTER = 0x2800;
        public const int TEXTURE_MATRIX = 0x0BA8;
        public const int TEXTURE_MAX_LEVEL = 0x813D;
        public const int TEXTURE_MAX_LOD = 0x813B;
        public const int TEXTURE_MIN_FILTER = 0x2801;
        public const int TEXTURE_MIN_LOD = 0x813A;
        public const int TEXTURE_PRIORITY = 0x8066;
        public const int TEXTURE_RECTANGLE = 0x84F5;
        public const int TEXTURE_RED_SIZE = 0x805C;
        public const int TEXTURE_RED_TYPE = 0x8C10;
        public const int TEXTURE_RESIDENT = 0x8067;
        public const int TEXTURE_SAMPLES = 0x9106;
        public const int TEXTURE_SHADOW = 0x82A1;
        public const int TEXTURE_SHARED_SIZE = 0x8C3F;
        public const int TEXTURE_STACK_DEPTH = 0x0BA5;
        public const int TEXTURE_STENCIL_SIZE = 0x88F1;
        public const int TEXTURE_SWIZZLE_A = 0x8E45;
        public const int TEXTURE_SWIZZLE_B = 0x8E44;
        public const int TEXTURE_SWIZZLE_G = 0x8E43;
        public const int TEXTURE_SWIZZLE_R = 0x8E42;
        public const int TEXTURE_SWIZZLE_RGBA = 0x8E46;
        public const int TEXTURE_VIEW = 0x82B5;
        public const int TEXTURE_VIEW_MIN_LAYER = 0x82DD;
        public const int TEXTURE_VIEW_MIN_LEVEL = 0x82DB;
        public const int TEXTURE_VIEW_NUM_LAYERS = 0x82DE;
        public const int TEXTURE_VIEW_NUM_LEVELS = 0x82DC;
        public const int TEXTURE_WIDTH = 0x1000;
        public const int TEXTURE_WRAP_R = 0x8072;
        public const int TEXTURE_WRAP_S = 0x2802;
        public const int TEXTURE_WRAP_T = 0x2803;
        public const int TIME_ELAPSED = 0x88BF;
        public const int TIMEOUT_EXPIRED = 0x911B;
        public const int TIMESTAMP = 0x8E28;
        public const int TOP_LEVEL_ARRAY_SIZE = 0x930C;
        public const int TOP_LEVEL_ARRAY_STRIDE = 0x930D;
        public const int TRANSFORM_FEEDBACK = 0x8E22;
        public const int TRANSFORM_FEEDBACK_BINDING = 0x8E25;
        public const int TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
        public const int TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;
        public const int TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
        public const int TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
        public const int TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;
        public const int TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
        public const int TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
        public const int TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
        public const int TRANSFORM_FEEDBACK_VARYING = 0x92F4;
        public const int TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
        public const int TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
        public const int TRANSPOSE_COLOR_MATRIX = 0x84E6;
        public const int TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
        public const int TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
        public const int TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
        public const int TRIANGLE_FAN = 0x0006;
        public const int TRIANGLE_STRIP = 0x0005;
        public const int TRIANGLE_STRIP_ADJACENCY = 0x000D;
        public const int TRIANGLES = 0x0004;
        public const int TRIANGLES_ADJACENCY = 0x000C;
        public const int TRUE = 1;
        public const int TYPE = 0x92FA;
        public const int UNDEFINED_VERTEX = 0x8260;
        public const int UNIFORM = 0x92E1;
        public const int UNIFORM_ARRAY_STRIDE = 0x8A3C;
        public const int UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
        public const int UNIFORM_BLOCK = 0x92E2;
        public const int UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
        public const int UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
        public const int UNIFORM_BLOCK_BINDING = 0x8A3F;
        public const int UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
        public const int UNIFORM_BLOCK_INDEX = 0x8A3A;
        public const int UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
        public const int UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC;
        public const int UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
        public const int UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
        public const int UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
        public const int UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
        public const int UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
        public const int UNIFORM_BUFFER = 0x8A11;
        public const int UNIFORM_BUFFER_BINDING = 0x8A28;
        public const int UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
        public const int UNIFORM_BUFFER_SIZE = 0x8A2A;
        public const int UNIFORM_BUFFER_START = 0x8A29;
        public const int UNIFORM_IS_ROW_MAJOR = 0x8A3E;
        public const int UNIFORM_MATRIX_STRIDE = 0x8A3D;
        public const int UNIFORM_NAME_LENGTH = 0x8A39;
        public const int UNIFORM_OFFSET = 0x8A3B;
        public const int UNIFORM_SIZE = 0x8A38;
        public const int UNIFORM_TYPE = 0x8A37;
        public const int UNPACK_ALIGNMENT = 0x0CF5;
        public const int UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
        public const int UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
        public const int UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
        public const int UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
        public const int UNPACK_IMAGE_HEIGHT = 0x806E;
        public const int UNPACK_LSB_FIRST = 0x0CF1;
        public const int UNPACK_ROW_LENGTH = 0x0CF2;
        public const int UNPACK_SKIP_IMAGES = 0x806D;
        public const int UNPACK_SKIP_PIXELS = 0x0CF4;
        public const int UNPACK_SKIP_ROWS = 0x0CF3;
        public const int UNPACK_SWAP_BYTES = 0x0CF0;
        public const int UNSIGNALED = 0x9118;
        public const int UNSIGNED_BYTE = 0x1401;
        public const int UNSIGNED_BYTE_2_3_3_REV = 0x8362;
        public const int UNSIGNED_BYTE_3_3_2 = 0x8032;
        public const int UNSIGNED_INT = 0x1405;
        public const int UNSIGNED_INT_10_10_10_2 = 0x8036;
        public const int UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
        public const int UNSIGNED_INT_24_8 = 0x84FA;
        public const int UNSIGNED_INT_2_10_10_10_REV = 0x8368;
        public const int UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
        public const int UNSIGNED_INT_8_8_8_8 = 0x8035;
        public const int UNSIGNED_INT_8_8_8_8_REV = 0x8367;
        public const int UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
        public const int UNSIGNED_INT_IMAGE_1D = 0x9062;
        public const int UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
        public const int UNSIGNED_INT_IMAGE_2D = 0x9063;
        public const int UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
        public const int UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
        public const int UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
        public const int UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
        public const int UNSIGNED_INT_IMAGE_3D = 0x9064;
        public const int UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
        public const int UNSIGNED_INT_IMAGE_CUBE = 0x9066;
        public const int UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
        public const int UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
        public const int UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
        public const int UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
        public const int UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
        public const int UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
        public const int UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
        public const int UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
        public const int UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
        public const int UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
        public const int UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
        public const int UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
        public const int UNSIGNED_INT_VEC2 = 0x8DC6;
        public const int UNSIGNED_INT_VEC3 = 0x8DC7;
        public const int UNSIGNED_INT_VEC4 = 0x8DC8;
        public const int UNSIGNED_NORMALIZED = 0x8C17;
        public const int UNSIGNED_SHORT = 0x1403;
        public const int UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
        public const int UNSIGNED_SHORT_4_4_4_4 = 0x8033;
        public const int UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
        public const int UNSIGNED_SHORT_5_5_5_1 = 0x8034;
        public const int UNSIGNED_SHORT_5_6_5 = 0x8363;
        public const int UNSIGNED_SHORT_5_6_5_REV = 0x8364;
        public const int UPPER_LEFT = 0x8CA2;
        public const int V2F = 0x2A20;
        public const int V3F = 0x2A21;
        public const int VALIDATE_STATUS = 0x8B83;
        public const int VENDOR = 0x1F00;
        public const int VERSION = 0x1F02;
        public const int VERTEX_ARRAY = 0x8074;
        public const int VERTEX_ARRAY_BINDING = 0x85B5;
        public const int VERTEX_ARRAY_POINTER = 0x808E;
        public const int VERTEX_ARRAY_SIZE = 0x807A;
        public const int VERTEX_ARRAY_STRIDE = 0x807C;
        public const int VERTEX_ARRAY_TYPE = 0x807B;
        public const int VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
        public const int VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
        public const int VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
        public const int VERTEX_ATTRIB_ARRAY_LONG = 0x874E;
        public const int VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
        public const int VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
        public const int VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
        public const int VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
        public const int VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
        public const int VERTEX_ATTRIB_BINDING = 0x82D4;
        public const int VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
        public const int VERTEX_BINDING_BUFFER = 0x8F4F;
        public const int VERTEX_BINDING_DIVISOR = 0x82D6;
        public const int VERTEX_BINDING_OFFSET = 0x82D7;
        public const int VERTEX_BINDING_STRIDE = 0x82D8;
        public const int VERTEX_PROGRAM_POINT_SIZE = 0x8642;
        public const int VERTEX_PROGRAM_TWO_SIDE = 0x8643;
        public const int VERTEX_SHADER = 0x8B31;
        public const int VERTEX_SUBROUTINE = 0x92E8;
        public const int VERTEX_SUBROUTINE_UNIFORM = 0x92EE;
        public const int VERTEX_TEXTURE = 0x829B;
        public const int VIEW_CLASS_128_BITS = 0x82C4;
        public const int VIEW_CLASS_16_BITS = 0x82CA;
        public const int VIEW_CLASS_24_BITS = 0x82C9;
        public const int VIEW_CLASS_32_BITS = 0x82C8;
        public const int VIEW_CLASS_48_BITS = 0x82C7;
        public const int VIEW_CLASS_64_BITS = 0x82C6;
        public const int VIEW_CLASS_8_BITS = 0x82CB;
        public const int VIEW_CLASS_96_BITS = 0x82C5;
        public const int VIEW_CLASS_BPTC_FLOAT = 0x82D3;
        public const int VIEW_CLASS_BPTC_UNORM = 0x82D2;
        public const int VIEW_CLASS_RGTC1_RED = 0x82D0;
        public const int VIEW_CLASS_RGTC2_RG = 0x82D1;
        public const int VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC;
        public const int VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD;
        public const int VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE;
        public const int VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF;
        public const int VIEW_COMPATIBILITY_CLASS = 0x82B6;
        public const int VIEWPORT = 0x0BA2;
        public const int VIEWPORT_BOUNDS_RANGE = 0x825D;
        public const int VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
        public const int VIEWPORT_SUBPIXEL_BITS = 0x825C;
        public const int WAIT_FAILED = 0x911D;
        public const int XOR = 0x1506;
        public const int ZERO = 0;
        public const int ZOOM_X = 0x0D16;
        public const int ZOOM_Y = 0x0D17;
        public const uint ACCUM_BUFFER_BIT = 0x00000200;
        public const uint ALL_ATTRIB_BITS = 0xFFFFFFFF;
        public const uint ALL_BARRIER_BITS = 0xFFFFFFFF;
        public const uint ALL_SHADER_BITS = 0xFFFFFFFF;
        public const uint ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
        public const uint BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
        public const uint CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF;
        public const uint CLIENT_PIXEL_STORE_BIT = 0x00000001;
        public const uint CLIENT_VERTEX_ARRAY_BIT = 0x00000002;
        public const uint COLOR_BUFFER_BIT = 0x00004000;
        public const uint COMMAND_BARRIER_BIT = 0x00000040;
        public const uint COMPUTE_SHADER_BIT = 0x00000020;
        public const uint CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
        public const uint CONTEXT_CORE_PROFILE_BIT = 0x00000001;
        public const uint CONTEXT_FLAG_DEBUG_BIT = 0x00000002;
        public const uint CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001;
        public const uint CURRENT_BIT = 0x00000001;
        public const uint DEPTH_BUFFER_BIT = 0x00000100;
        public const uint ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
        public const uint ENABLE_BIT = 0x00002000;
        public const uint EVAL_BIT = 0x00010000;
        public const uint FOG_BIT = 0x00000080;
        public const uint FRAGMENT_SHADER_BIT = 0x00000002;
        public const uint FRAMEBUFFER_BARRIER_BIT = 0x00000400;
        public const uint GEOMETRY_SHADER_BIT = 0x00000004;
        public const uint HINT_BIT = 0x00008000;
        public const uint INVALID_INDEX = 0xFFFFFFFF;
        public const uint LIGHTING_BIT = 0x00000040;
        public const uint LINE_BIT = 0x00000004;
        public const uint LIST_BIT = 0x00020000;
        public const uint MULTISAMPLE_BIT = 0x20000000;
        public const uint PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
        public const uint PIXEL_MODE_BIT = 0x00000020;
        public const uint POINT_BIT = 0x00000002;
        public const uint POLYGON_BIT = 0x00000008;
        public const uint POLYGON_STIPPLE_BIT = 0x00000010;
        public const uint SCISSOR_BIT = 0x00080000;
        public const uint SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
        public const uint SHADER_STORAGE_BARRIER_BIT = 0x00002000;
        public const uint STENCIL_BUFFER_BIT = 0x00000400;
        public const uint SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
        public const uint TESS_CONTROL_SHADER_BIT = 0x00000008;
        public const uint TESS_EVALUATION_SHADER_BIT = 0x00000010;
        public const uint TEXTURE_BIT = 0x00040000;
        public const uint TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
        public const uint TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
        public const uint TRANSFORM_BIT = 0x00001000;
        public const uint TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
        public const uint UNIFORM_BARRIER_BIT = 0x00000004;
        public const uint VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
        public const uint VERTEX_SHADER_BIT = 0x00000001;
        public const uint VIEWPORT_BIT = 0x00000800;
        public const ulong TIMEOUT_IGNORED = 0xFFFFFFFFFFFFF;
    }
}
