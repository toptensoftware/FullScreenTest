using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;

namespace OpenGL
{
    [Obfuscation(Exclude = true, ApplyToMembers = true)]        // Don't obfuscate because we use reflection to get function names
    public partial class Bindings
    {
        public Bindings()
        {
            impl_Bindings();
        }

        public delegate void del_glDepthMask(bool flag);
        public del_glDepthMask glDepthMask;
        public delegate void del_glUniform1fv(int location, int count, IntPtr value);
        public del_glUniform1fv glUniform1fv;
        public delegate void del_glUniform2fv(int location, int count, IntPtr value);
        public del_glUniform2fv glUniform2fv;
        public delegate void del_glReadBuffer(int mode);
        public del_glReadBuffer glReadBuffer;
        public delegate void del_glDrawBuffer(int mode);
        public del_glReadBuffer glDrawBuffer;
        public delegate void del_glBlitFramebuffer(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, int filter);
        public del_glBlitFramebuffer glBlitFramebuffer;
        public delegate void del_glStencipOp(int sfail, int dpfail, int dppass);
        public del_glStencipOp glStencilOp;
        public delegate void del_glStencipFunc(int func, IntPtr value, uint mask);
        public del_glStencipFunc glStencilFunc;
        public delegate void del_glVertexAttribIPointer(uint index, int size, int type, int stride, IntPtr ptr);
        public del_glVertexAttribIPointer glVertexAttribIPointer;
        public delegate void del_glVertexAttribDivisor(uint index, uint divisor);
        public del_glVertexAttribDivisor glVertexAttribDivisor;
        public delegate void del_glUniformBlockBinding(uint program, uint index, uint binding);
        public del_glUniformBlockBinding glUniformBlockBinding;
        public delegate uint del_glGetUniformBlockIndex(uint program, string name);
        public del_glGetUniformBlockIndex glGetUniformBlockIndex;
        public delegate void del_glTexImage2DMultisample(int target, int samples, int internalformat, IntPtr width, IntPtr height, bool fixedsamplelocations);
        public del_glTexImage2DMultisample glTexImage2DMultisample;
        public delegate void del_glTexImage3D(uint target, int level, int internalformat, IntPtr width, IntPtr height, IntPtr depth, int border, int format, int type, IntPtr pixels);
        public del_glTexImage3D glTexImage3D;
        public delegate void del_glTexSubImage3D(uint target, int level, int xoffset, int yoffset, int zoffset, IntPtr width, IntPtr height, IntPtr depth, int format, int type, IntPtr pixels);
        public del_glTexSubImage3D glTexSubImage3D;
        public delegate void del_glGenerateMipmap(int target);
        public del_glGenerateMipmap glGenerateMipmap;
        public delegate void del_glFramebufferTexture(int target, int attachment, uint texture, int level);
        public del_glFramebufferTexture glFramebufferTexture;
        public delegate void del_glDrawArraysInstanced(int mode, int first, int count, int instancecount);
        public del_glDrawArraysInstanced glDrawArraysInstanced;
        public delegate void del_glColorMask(bool red, bool green, bool blue, bool alpha);
        public del_glColorMask glColorMask;
        public delegate void del_glBindBufferRange(int count, uint index, uint buffer, IntPtr offset, uint size);
        public del_glBindBufferRange glBindBufferRange;

        public delegate int del_glGetError();
        public del_glGetError glGetError;
        public delegate IntPtr del_glGetString(uint name);
        public del_glGetString glGetString;
        public delegate void del_glFlush();
        public del_glFlush glFlush;
        public delegate void del_glClearColor(float red, float green, float blue, float alpha);
        public del_glClearColor glClearColor;
        public delegate void del_glClear(uint mask);
        public del_glClear glClear;
        public delegate void del_glClearBuffer(UInt32 buffer, int drawBuffer, IntPtr value);
        public del_glClearBuffer glClearBufferuiv;
        public del_glClearBuffer glClearBufferiv;
        public del_glClearBuffer glClearBufferfv;
        public delegate void del_glViewport(int x, int y, int width, int height);
        public del_glViewport glViewport;
        public delegate void del_glEnable(uint cap);
        public del_glEnable glEnable;
        public delegate void del_glDisable(uint cap);
        public del_glEnable glDisable;
        public delegate void del_glBlendFunc(uint sfactor, uint dfactor);
        public del_glBlendFunc glBlendFunc;
        public delegate void del_glDepthFunc(uint func);
        public del_glDepthFunc glDepthFunc;
        public delegate void del_glDepthRange(double near, double far);
        public del_glDepthRange glDepthRange;
        public delegate void del_glPolygonMode(int face, int mode);
        public del_glPolygonMode glPolygonMode;
        public delegate void del_glCullFace(int mode);
        public del_glCullFace glCullFace;
        public delegate void del_glFrontFace(int mode);
        public del_glFrontFace glFrontFace;
        public delegate void del_glGetIntegerv(uint pname, out int params_notkeyword);
        public del_glGetIntegerv glGetIntegerv;
        public delegate void del_glPixelStorei(uint pname, int param);
        public del_glPixelStorei glPixelStorei;
        public delegate void del_glBindTexture(uint target, uint texture);
        public del_glBindTexture glBindTexture;
        public delegate void del_glTexParameteri(uint target, uint pname, int param);
        public del_glTexParameteri glTexParameteri;
        public delegate void del_glTexImage2D(uint target, int level, int internalformat, IntPtr width, IntPtr height, int border, int format, int type, IntPtr pixels);
        public del_glTexImage2D glTexImage2D;
        public delegate void del_glTexSubImage2D(uint target, int level, int xoffset, int yoffset, IntPtr width, IntPtr height, int format, int type, IntPtr pixels);
        public del_glTexSubImage2D glTexSubImage2D;
        public delegate void del_glReadPixels(int x, int y, int width, int height, int format, int type, IntPtr pixels);
        public del_glReadPixels glReadPixels;
        public delegate void del_glGetTexImage(uint target, int level, int format, int type, IntPtr pixels);
        public del_glGetTexImage glGetTexImage;
        public delegate void del_glGetTexLevelParameteriv(uint target, int level, int pname, out int val);
        public del_glGetTexLevelParameteriv glGetTexLevelParameteriv;
        public delegate uint del_glCreateShader(uint type);
        public del_glCreateShader glCreateShader;
        public delegate void del_glShaderSource(UInt32 shader, Int32 count, String[] srcs, IntPtr lengths);
        public del_glShaderSource glShaderSource;
        public delegate void del_glGetShaderInfoLog(uint shader, int bufSize, out int length, StringBuilder infoLog);
        public del_glGetShaderInfoLog glGetShaderInfoLog;
        public delegate void del_glGetProgramInfoLog(uint shader, int bufSize, out int length, StringBuilder infoLog);
        public del_glGetProgramInfoLog glGetProgramInfoLog;
        public delegate void del_glDeleteShader(uint shader);
        public del_glDeleteShader glDeleteShader;
        public delegate void del_glGetShaderiv(uint shader, int pname, out int valOut);
        public del_glGetShaderiv glGetShaderiv;
        public delegate void del_glGetProgramiv(uint program, int pname, out int valOut);
        public del_glGetProgramiv glGetProgramiv;
        public delegate void del_glCompileShader(uint shader);
        public del_glCompileShader glCompileShader;
        public delegate int del_glGetUniformLocation(uint program, string name);
        public del_glGetUniformLocation glGetUniformLocation;
        public delegate int del_glGetAttribLocation(uint program, string name);
        public del_glGetAttribLocation glGetAttribLocation;
        public delegate void del_glBindAttribLocation(uint program, uint index, string name);
        public del_glBindAttribLocation glBindAttribLocation;
        public delegate uint del_glCreateProgram();
        public del_glCreateProgram glCreateProgram;
        public delegate void del_glAttachShader(uint program, uint shader);
        public del_glAttachShader glAttachShader;
        public delegate void del_glBindFragDataLocation(uint program, uint colorNumber, string name);
        public del_glBindFragDataLocation glBindFragDataLocation;
        public delegate void del_glLinkProgram(uint program);
        public del_glLinkProgram glLinkProgram;
        public delegate void del_glUniformMatrix4fv(int location, int count, bool transpose, IntPtr value);
        public del_glUniformMatrix4fv glUniformMatrix4fv;
        public delegate void del_glUniform1i(int location, int x);
        public del_glUniform1i glUniform1i;
        public delegate void del_glUniform1f(int location, float x);
        public del_glUniform1f glUniform1f;
        public delegate void del_glUniform3fv(int location, int count, IntPtr value);
        public del_glUniform3fv glUniform3fv;
        public delegate void del_glUniform3f(int location, float x, float y, float p);
        public del_glUniform3f glUniform3f;
        public delegate void del_glUniform4f(int location, float x, float y, float p, float q);
        public del_glUniform4f glUniform4f;
        public delegate void del_glUseProgram(uint program);
        public del_glUseProgram glUseProgram;
        public delegate void del_glDrawArrays(int mode, int first, int count);
        public del_glDrawArrays glDrawArrays;
        public delegate void del_glEnableVertexAttribArray(uint index);
        public del_glEnableVertexAttribArray glEnableVertexAttribArray;
        public delegate void del_glDisableVertexAttribArray(uint index);
        public del_glDisableVertexAttribArray glDisableVertexAttribArray;
        public delegate void del_glVertexAttribPointer(uint index, int size, int type, bool normalized, int stride, IntPtr ptr);
        public del_glVertexAttribPointer glVertexAttribPointer;
        public delegate void del_glDetachShader(uint program, uint shader);
        public del_glDetachShader glDetachShader;
        public delegate void del_glValidateProgram(uint program);
        public del_glValidateProgram glValidateProgram;
        public delegate void del_glDeleteProgram(uint program);
        public del_glDeleteProgram glDeleteProgram;
        public delegate void del_glGenBuffers(int count, UInt32[] buffers);
        public del_glGenBuffers glGenBuffers;
        public delegate void del_glDeleteBuffers(int count, IntPtr buffers);
        public del_glDeleteBuffers glDeleteBuffers;
        public delegate void del_glBindBuffer(int count, uint buffer);
        public del_glBindBuffer glBindBuffer;
        public delegate void del_glBufferData(int target, uint size, IntPtr data, int usage);
        public del_glBufferData glBufferData;
        public delegate void del_glBufferSubData(int target, IntPtr offset, uint size, IntPtr data);
        public del_glBufferSubData glBufferSubData;
        public delegate void del_glGenTextures(int count, UInt32[] Textures);
        public del_glGenTextures glGenTextures;
        public delegate void del_glDeleteTextures(int count, IntPtr Textures);
        public del_glDeleteTextures glDeleteTextures;
        public delegate void del_glGenVertexArrays(int count, UInt32[] VertexArrays);
        public del_glGenVertexArrays glGenVertexArrays;
        public delegate void del_glDeleteVertexArrays(int count, IntPtr VertexArrays);
        public del_glDeleteVertexArrays glDeleteVertexArrays;
        public delegate void del_glBindVertexArray(uint VertexArray);
        public del_glBindVertexArray glBindVertexArray;
        public delegate void del_glActiveTexture(int texture);
        public del_glActiveTexture glActiveTexture;
        public delegate void del_glGenFramebuffers(int count, UInt32[] Framebuffers);
        public del_glGenFramebuffers glGenFramebuffers;
        public delegate void del_glDeleteFramebuffers(int count, IntPtr Framebuffers);
        public del_glDeleteFramebuffers glDeleteFramebuffers;
        public delegate void del_glBindFramebuffer(int target, uint VertexArray);
        public del_glBindFramebuffer glBindFramebuffer;
        public delegate void del_glFramebufferTexture2D(int target, int attachment, int textarget, uint texture, int level);
        public del_glFramebufferTexture2D glFramebufferTexture2D;
        public delegate int del_glCheckFramebufferStatus(int target);
        public del_glCheckFramebufferStatus glCheckFramebufferStatus;
        public delegate int del_glGenRenderbuffers(int count, UInt32[] buffers);
        public del_glGenRenderbuffers glGenRenderbuffers;
        public delegate void del_glDeleteRenderbuffers(int n, IntPtr renderbuffers);
        public del_glDeleteRenderbuffers glDeleteRenderbuffers;
        public delegate int del_glBindRenderbuffer(int target, uint renderbuffer);
        public del_glBindRenderbuffer glBindRenderbuffer;
        public delegate void del_glRenderbufferStorage(int target, int internalformat, int width, int height);
        public del_glRenderbufferStorage glRenderbufferStorage;
        public delegate void del_glFramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, uint renderbuffer);
        public del_glFramebufferRenderbuffer glFramebufferRenderbuffer;
        public delegate void del_glDrawBuffers(int n, IntPtr bufs);
        public del_glDrawBuffers glDrawBuffers;
    }
}
